/**
*
* Params:
*
* @input SearchPhrase : String
*
* @output AvailableIMAreas : dw.util.Collection
* @output ErrorMsg : String
*
*/

importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.net );
importPackage( dw.content );

importScript( "amplience/AmplienceIMHelper.ds" );
/**
 * Load IM streams
 *
 * @param {PipelineDictionary} args - input arguments array
 *
 * @return {Number} PIPELET_NEXT for success or PIPELET_ERROR for error
 */
function execute( args : PipelineDictionary ) : Number
{
	try {

		/**
		 * Get Custom Preferences
		 */
		var customPreferences = dw.system.Site.getCurrent().getPreferences().custom;
		
		var ampApiURL : String = customPreferences['ampAPI'];
		var ampAPIUser : String = customPreferences['ampAPIUser'];
		var ampAPIPassword : String = customPreferences['ampAPIPassword'];
		var ampIMApiURL : String = customPreferences['ampIMAPI'];
		var searchPhrase : String = args.SearchPhrase;

		var params = {
			username : ampAPIUser,
			password : ampAPIPassword,
			ampApiURL : ampApiURL,
			ampIMApiURL : ampIMApiURL,
			searchPhrase : searchPhrase
		};
		
		var amplienceIMHelper : AmplienceIMHelper = new AmplienceIMHelper(params);

		var availableIMAreas : Collection = amplienceIMHelper.getAvailableIMAreas();

		args.AvailableIMAreas = availableIMAreas;
	}
	catch(e) {
		var errMsg = 'LoadAmplienceIMAreas.ds : ' + e.message;
		args.ErrorMsg = errMsg;
		Logger.error(errMsg);
		return PIPELET_ERROR;
	}

   return PIPELET_NEXT;
}
