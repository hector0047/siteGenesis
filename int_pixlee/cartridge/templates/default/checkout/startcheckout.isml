<!--- TEMPLATENAME: startcheckout.isml --->

<isinclude template="utils/launchevents"/>

<script data="pixlee-start-checkout">
	var cartArray = [];
	var cartItem = {};
	var cartTotal = 0;
	var cartTotalQuantity = 0;
</script>

<isloop items="${pdict.CurrentForms.cart.shipments}" var="CartShipment" status="loopstate">
	<isloop items="${CartShipment.items}" alias="FormLi" status="loopstate">
		<isset name="lineItem" value="${FormLi.object}" scope="page" />
		<isset name="productObj" value="${dw.catalog.ProductMgr.getProduct(lineItem.productID)}" scope="page" />

		<script data="pixlee-start-checkout">
			function createStartCheckoutCartItem() {

				var productSku = "${productObj.getID()}";
				if(${productObj.getManufacturerSKU() != null} && ${skuReference == 'Manufacturer SKU'}){
					productSku = "${productObj.getManufacturerSKU()}";
				}

				cartItem = {
					quantity: parseInt("${lineItem.getQuantityValue()}"),
					product_id: "${productObj.productID}",
					product_sku: productSku,
					price: "${lineItem.getPrice()}".replace(/[^0-9\.]+/g,"")
				};

				cartArray.push(cartItem);
				cartTotal += parseFloat("${lineItem.getPrice()}".replace(/[^0-9\.]+/g,""));
				cartTotalQuantity += parseInt("${lineItem.getQuantityValue()}");
			};
			// Guard the creation of cartItem so that if something breaks, we'll get the log
			guard(createStartCheckoutCartItem, []);
		</script>
	</isloop>
</isloop>

<script data="pixlee-start-checkout">
var checkoutButtons = document.getElementsByName('${pdict.CurrentForms.cart.checkoutCart.htmlName}');
var miniCartCheckoutLink = document.getElementsByClassName('mini-cart-link-checkout')[0];

for (var i = 0; i < checkoutButtons.length; i++) {
	checkoutButtons[i].addEventListener('click', checkoutStartHandler);
}

if (miniCartCheckoutLink !== undefined) {
	miniCartCheckoutLink.addEventListener('click', checkoutStartHandler);
}

function checkoutStartHandler(event) {
	var payload = {};
	payload['cart_contents'] = cartArray;
	payload['cart_total'] = cartTotal.toString();
	payload['cart_total_quantity'] = cartTotalQuantity;

	// The listener on the other side of this function has its own guard
	launchEvent('checkout:start', payload);
};

</script>
