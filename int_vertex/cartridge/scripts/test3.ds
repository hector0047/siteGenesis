/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*    @input Basket : dw.order.Basket
*
*/
importPackage( dw.system );
importPackage( dw.rpc );
importPackage( dw.order );
importPackage( dw.web );
importPackage( dw.util );
importPackage( dw.net );
importScript('lib/libVertexRPCQuotation.ds');
//importScript('Testing/TestRPC.ds');


function execute( args : PipelineDictionary ) : Number
{
	 Logger.info("Calling test3");
	return test3(args);
}


function test3(args : PipelineDictionary) :  Number {
	
	try
	{
	 Logger.info("Test3 ");
	 var basket : Basket = args.Basket;
	 var   vertexHelper:VertexRPCQuotationHelper = getVertexRPCQuotationHelper();
	 
	 var requestString : String = vertexHelper.getQuotationRequestString(basket);
	 var responseString :String = vertexHelper.sendSoapRequest(requestString);
     Logger.info("Response string="+responseString );
     vertexHelper.parseQuotationResponseString(basket,responseString);

	}catch(e){
		// handle exception
		Logger.error(" Test3 Exception thrown. Error=" + e );
	}
	 return PIPELET_NEXT;
}

function test4(args : PipelineDictionary) :  Number {
	
	var webref : WebReference = webreferences.CalculateTaxDoc.wsdl;
	var service : Stub = webref.getDefaultService();
	service.setPassword("vertex");
    service.setUsername("admin");
    service.setTimeout(0);
   var taxCalulationResObj:String = "";
	
	try {
		 Logger.info("test5");
	strRequest =  "<soapenv:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"  xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:axis=\"http://axis.webservices.vertexinc.com\"> "
	strRequest += " <soapenv:Body>";
	strRequest += "	<axis:calculateTaxString soapenv:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">";
	//strRequest += "	 <inString xsi:type=\"soapenc:string\"   xmlns:soapenc=\"http://schemas.xmlsoap.org/soap/encoding/\">Test string</inString>";
	strRequest += "</axis:calculateTaxString>";
	strRequest += "</soapenv:Body>";
	strRequest += "</soapenv:Envelope>";
	Logger.info("Request="+ strRequest );
	taxCalulationResObj = service.CalculateTaxWSService(strRequest);
		
		Logger.info("Completed the service call");
		if(taxCalulationResObj == null)
		{
			Logger.info("Response=null");
			
		}
		 Logger.info("Response="+ taxCalulationResObj );
	}catch(e){
		// handle exception
		Logger.error(" Exception thrown. Error=" + e );
	}
	 Logger.info("test5 completed.");
   return PIPELET_NEXT;
}
function test5(args : PipelineDictionary) :  Number {
	
	var webref : WebReference = webreferences.CalculateTaxStringRPC;
	var service : Stub = webref.getDefaultService();
	service.setPassword("vertex");
    service.setUsername("admin");
    service.setTimeout(0);
   var taxCalulationResObj:String = "";
	
	try {
		 Logger.info("test5");
		 var strRequest:String = "<soapenv:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:axis=\"http://axis.webservices.vertexinc.com\">";
		   strRequest += "<soapenv:Header/>";
		   strRequest += "<soapenv:Body>";
		    strRequest += "  <axis:calculateTaxString soapenv:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">";
		     strRequest += "  </axis:calculateTaxString>";
		   strRequest += "</soapenv:Body>";
		strRequest += "</soapenv:Envelope>";
		Logger.info("Request="+ strRequest );
	taxCalulationResObj = service.calculateTaxString(strRequest);
		
		Logger.info("Completed the service call");
		if(taxCalulationResObj == null)
		{
			Logger.info("Response=null");
			
		}
		 Logger.info("Response="+ taxCalulationResObj );
	}catch(e){
		// handle exception
		Logger.error(" Exception thrown. Error=" + e );
	}
	 Logger.info("test5 completed.");
   return PIPELET_NEXT;
}

function test6(args : PipelineDictionary) :  Number {
	
	try {
		 Logger.info("test6");
		var webref : WebReference = webreferences.vt1;
		//var webref :WebReference = webreferences.calculateTax_6_0;
   	var service : Stub = webref.getDefaultService();
    
  	var login = new webref.LoginType();
  	login.setUserName("admin");
  	login.setPassword("vertex");
  	
  	var quotationRequestType = new webref.QuotationRequestType();
  	
  	
  	var sellerType = new webref.SellerType();
  	var physicalOrigin = new webref.LocationType();
  	physicalOrigin.setLocationCode("4941");
  	sellerType.company="11000";
  	sellerType.setPhysicalOrigin(physicalOrigin);
  	
  	var customer = new webref.CustomerType();
  	var destination = new webref.LocationType(); 
  	destination.streetAddress1="100 Pier 1 Place";
  	destination.city="Fort Worth";
  	destination.mainDivision="TX";
  	destination.postalCode="76102";
  	destination.country="UNITED STATES";
  	customer.setDestination(destination);
  	
  	
  	var lineitem = new webref.LineItemQSIType();
  	var product = new webref.Product("Test");
  	product.setProductClass("100");
  	lineitem.setProduct(product);
  	
  	var extendedPrice = new webref.AmountType();
  	extendedPrice.set_value(1000);
  	lineitem.setExtendedPrice(extendedPrice);
  	
  	
  	
  	quotationRequestType.setTransactionType(webref.SaleTransactionType.fromString("SALE"));
  	quotationRequestType.setSeller(sellerType)
  	quotationRequestType.setCustomer(customer);
  	quotationRequestType.setLineItem([lineitem]);
  	//quotationRequestType.returnAssistedParametersIndicator=true;
  	
  	var envelope = new webref.VertexEnvelope();
  	envelope.setLogin(login);
  	envelope.setQuotationRequest(quotationRequestType);
	

	//var data =new webref.VertexEnvelopeApplicationData();
	//envelope.setApplicationData(data);
	
	Logger.error(new Date());
	var envret = service.calculateTax60(envelope);
	Logger.error(new Date());
	Logger.error(envret.getQuotationResponse().getTotalTax().get_value() );
	Logger.error(envret.getQuotationResponse().getLineItem()[0].getFairMarketValue().get_value() );
	Logger.error(envret.getQuotationResponse().getLineItem()[0].getTaxes()[2].getTaxRuleId().get_value());
	}catch(e){
		// handle exception
		Logger.error(" Exception thrown. Error=" + e );
	}
	 Logger.info("test6 completed.");
   return PIPELET_NEXT;
}


function test7(args : PipelineDictionary) :  Number {
	
	try {
		 Logger.info("test7");
		var webref : WebReference = webreferences.CalculateTax60;
		if(webref == null)
		{
			Logger.info("Null web referrence" );
		}
   	var service : Stub = webref.getDefaultService();
   	if(service == null)
		{
			Logger.info("Null service" );
		}
    var strRequest:String =  "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:urn=\"urn:vertexinc:o-series:tps:6:0\">";
	strRequest += " <soapenv:Header/>";
	strRequest += "<soapenv:Body>";
	strRequest += "<urn:Login>";
	strRequest += "	<urn:UserName>admin</urn:UserName>";
	strRequest += "	<urn:Password>vertex</urn:Password>";
	strRequest += "</urn:Login>";
	strRequest += "</QuotationRequest>";
	strRequest += "</soapenv:Body>";
	strRequest += " </soapenv:Envelope>"
	//Logger.info("Request="+ strRequest );
	
	
	 Logger.info("Service=" +service.toString());
	
	taxCalulationResObj = service.calculateTax60(strRequest);
	
		
		Logger.info("Completed the service call");
		if(taxCalulationResObj == null)
		{
			Logger.info("Response=null");
			
		}
		 Logger.info("Response="+ taxCalulationResObj );
    
  	
	}catch(e){
		// handle exception
		Logger.error(" Exception thrown. Error=" + e );
	}
	 Logger.info("test7 completed.");
   return PIPELET_NEXT;
}
function test8(args : PipelineDictionary) :  Number {
	
	try {
		 Logger.info("test8");
		var webref : WebReference = webreferences.vt1;
   	var service : Stub = webref.getDefaultService();
    var strRequest:String =  "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:urn=\"urn:vertexinc:o-series:tps:6:0\">";
	strRequest += " <soapenv:Header/>";
	strRequest += "<soapenv:Body>";
	strRequest += "<urn:Login>";
	strRequest += "	<urn:UserName>admin</urn:UserName>";
	strRequest += "	<urn:Password>vertex</urn:Password>";
	strRequest += "</urn:Login>";
	strRequest += "</QuotationRequest>";
	strRequest += "</soapenv:Body>";
	strRequest += " </soapenv:Envelope>"
	Logger.info("Request="+ strRequest );
	taxCalulationResObj = service.LookupTaxAreas60(strRequest);
		
		Logger.info("Completed the service call");
		if(taxCalulationResObj == null)
		{
			Logger.info("Response=null");
			
		}
		 Logger.info("Response="+ taxCalulationResObj );
    
  	
	}catch(e){
		// handle exception
		Logger.error(" Exception thrown. Error=" + e );
	}
	 Logger.info("test8 completed.");
   return PIPELET_NEXT;
}

function test9(args : PipelineDictionary) :  Number {
	
	try {
		 Logger.info("test9");
		var webref : WebReference = webreferences.calculateTax_6_0;
   	var service : Stub = webref.getDefaultService();
    var strRequest:String =  "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:urn=\"urn:vertexinc:o-series:tps:6:0\">";
	strRequest += " <soapenv:Header/>";
	strRequest += "<soapenv:Body>";
	strRequest += "<urn:Login>";
	strRequest += "	<urn:UserName>admin</urn:UserName>";
	strRequest += "	<urn:Password>vertex</urn:Password>";
	strRequest += "</urn:Login>";
	strRequest += "</QuotationRequest>";
	strRequest += "</soapenv:Body>";
	strRequest += " </soapenv:Envelope>"
	Logger.info("Request="+ strRequest );
	taxCalulationResObj = service.calculateTax60(strRequest);
		
		Logger.info("Completed the service call");
		if(taxCalulationResObj == null)
		{
			Logger.info("Response=null");
			
		}
		 Logger.info("Response="+ taxCalulationResObj );
    
  	
	}catch(e){
		// handle exception
		Logger.error(" Exception thrown. Error=" + e );
	}
	 Logger.info("test9 completed.");
   return PIPELET_NEXT;
}


