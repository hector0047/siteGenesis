/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*    @input Basket : dw.order.Basket
*
*/
importPackage( dw.system );
importPackage( dw.rpc );
importPackage( dw.order );
importPackage( dw.web );
importPackage( dw.util );
importScript('lib/libVertexRPCQuotation.ds');

function execute( args : PipelineDictionary ) : Number
{
	try{
		 Logger.info("AppyDefaultTaxRate Started**************************************************************************************.");
		  var   vertexHelper:VertexRPCQuotationHelper = getVertexRPCQuotationHelper();
		 if(vertexHelper == null) {
		 	Logger.info("Unable to get VertexHelper." );
		 	return  PIPELET_NEXT;
		 }
		 vertexHelper.applyDefaultTax(args.Basket);
		 vertexHelper.performPriceAdjustment(args.Basket);  
		Logger.info("AppyDefaultTaxRate Completed####################################################################################.");
		 return PIPELET_NEXT;
		}catch(e){
			// handle exception
			var strError : String = e;
			Logger.error(" AppyDefaultTaxRate Exception thrown. Error=" + e );
		}
		Logger.info("AppyDefaultTaxRate Completed after exception.");
	 return PIPELET_NEXT;
}
