<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="process">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Verifies a credit card against a valid card number and expiration date and possibly invalidates invalid form fields. If the verification was successful a credit card payment instrument is created.
The pipeline just reuses the basic credit card validation pipeline from processor BASIC_CREDIT.</description>
        </text-node>
        <node-display width="2" x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_2">
    <segment>
      <node>
        <text-node>
          <description>Authorizes a payment using a credit card. A real integration is not supported, that's why the pipeline returns this state back to the calling checkout pipeline.</description>
        </text-node>
        <node-display width="2" x="5" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Handle">
    <segment>
      <node>
        <start-node call-mode="private" name="Handle" secure="false"/>
        <node-display x="3" y="4"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
          <bend-point relative-to="source" x="-1" y="1"/>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="empty(SavedSubscriptionID)" condition-operator="expr"/>
        <node-display orientation="horizontal" x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="source" x="1" y="1"/>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="VerifyPaymentCard" pipelet-set-identifier="bc_api">
                <config-property key="VerifySecurityCode" value="true"/>
                <key-binding alias="dw.order.PaymentMgr.getPaymentCard(CurrentForms.billing.paymentMethods.creditCard.type.value)" key="PaymentCard"/>
                <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.number.value" key="CardNumber"/>
                <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.month.value" key="ExpirationMonth"/>
                <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.year.value" key="ExpirationYear"/>
                <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.cvn.value" key="CardSecurityCode"/>
                <key-binding alias="CreditCardStatus" key="Status"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="checkout/InvalidatePaymentCardFormElements.ds"/>
                      <key-binding alias="null" key="ScriptLog"/>
                      <key-binding alias="CreditCardStatus" key="Status"/>
                      <key-binding alias="CurrentForms.billing.paymentMethods.creditCard" key="CreditCardForm"/>
                    </pipelet-node>
                    <node-display x="1" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in1" target-path="../../+2/b2.1">
                        <transition-display>
                          <bend-point relative-to="source" x="1" y="0"/>
                          <bend-point relative-to="target" x="1" y="0"/>
                        </transition-display>
                      </transition>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="../../+2/b2.1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="-1" y="1"/>
          <bend-point relative-to="target" x="-1" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/RemovePaymentInstrumentByPassedType.ds"/>
          <key-binding alias="Loggy" key="ScriptLog"/>
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="&quot;PayPal&quot;" key="PaymentType"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkout/CreatePaymentInstrument.ds"/>
          <key-binding alias="loggy" key="ScriptLog"/>
          <key-binding alias="Basket" key="LineItemCtnr"/>
          <key-binding alias="dw.order.PaymentInstrument.METHOD_CREDIT_CARD" key="PaymentType"/>
          <key-binding alias="true" key="RemoveExisting"/>
          <key-binding alias="PaymentInstrument" key="PaymentInstrument"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="SASOPCheck" condition-operator="expr"/>
        <node-display x="0" y="2"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <key-binding alias="Basket.getDefaultShipment().ID" key="From_0"/>
                <key-binding alias="PaymentInstrument.custom.shipment" key="To_0"/>
                <key-binding alias="SASOPSubscriptionResponse.expMonth" key="From_1"/>
                <key-binding alias="PaymentInstrument.creditCardExpirationMonth" key="To_1"/>
                <key-binding alias="SASOPSubscriptionResponse.expYear" key="From_2"/>
                <key-binding alias="PaymentInstrument.creditCardExpirationYear" key="To_2"/>
                <key-binding alias="dw.order.PaymentMgr.getPaymentCard(SASOPSubscriptionResponse.cardType).cardType" key="From_3"/>
                <key-binding alias="PaymentInstrument.creditCardType" key="To_3"/>
                <key-binding alias="SASOPSubscriptionResponse.maskedCCNumber" key="From_4"/>
                <key-binding alias="PaymentInstrument.creditCardNumber" key="To_4"/>
                <key-binding alias="SASOPSubscriptionResponse.subscriptionID" key="From_5"/>
                <key-binding alias="PaymentInstrument.custom.subscriptionID" key="To_5"/>
                <key-binding alias="SASOPSubscriptionResponse.billtoCompanyName" key="From_6"/>
                <key-binding alias="PaymentInstrument.creditCardHolder" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <key-binding alias="Basket.getDefaultShipment().ID" key="From_0"/>
          <key-binding alias="PaymentInstrument.custom.shipment" key="To_0"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.month.value" key="From_1"/>
          <key-binding alias="PaymentInstrument.creditCardExpirationMonth" key="To_1"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.year.value" key="From_2"/>
          <key-binding alias="PaymentInstrument.creditCardExpirationYear" key="To_2"/>
          <key-binding alias="dw.order.PaymentMgr.getPaymentCard(CurrentForms.billing.paymentMethods.creditCard.type.value).cardType" key="From_3"/>
          <key-binding alias="PaymentInstrument.creditCardType" key="To_3"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.number.value" key="From_4"/>
          <key-binding alias="PaymentInstrument.creditCardNumber" key="To_4"/>
          <key-binding alias="SavedSubscriptionID" key="From_5"/>
          <key-binding alias="PaymentInstrument.custom.subscriptionID" key="To_5"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.creditCard.owner.value" key="From_6"/>
          <key-binding alias="PaymentInstrument.creditCardHolder" key="To_6"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in3" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node name="success"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Authorize">
    <segment>
      <node>
        <start-node call-mode="private" name="Authorize" secure="false"/>
        <node-display x="8" y="4"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cybersource-AuthorizeCreditCard"/>
        <node-display x="0" y="2"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="3"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="authorized">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="GetPaymentProcessor" pipelet-set-identifier="bc_api">
                <key-binding alias="&quot;CYBERSOURCE_CREDIT&quot;" key="ID"/>
                <key-binding alias="PaymentProcessor" key="PaymentProcessor"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="../b2.1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="true"/>
                <key-binding alias="RequestID" key="From_0"/>
                <key-binding alias="PaymentInstrument.paymentTransaction.transactionID" key="To_0"/>
                <key-binding alias="PaymentProcessor" key="From_1"/>
                <key-binding alias="PaymentInstrument.paymentTransaction.paymentProcessor" key="To_1"/>
                <key-binding alias="paymentTokenId" key="From_2"/>
                <key-binding alias="PaymentInstrument.paymentTransaction.custom.bfProcessorToken" key="To_2"/>
                <key-binding alias="dw.order.PaymentMgr.getPaymentCard(PaymentInstrument.creditCardType).name" key="From_3"/>
                <key-binding alias="PaymentInstrument.creditCardType" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Eval" pipelet-set-identifier="bc_api">
                <config-property key="OnError" value="null"/>
                <config-property key="Transactional" value="true"/>
                <config-property key="Expression" value="PaymentInstrument.creditCardType.replace(&quot; &quot;, &quot;&quot;)"/>
                <key-binding alias="PaymentInstrument.creditCardType" key="Result"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="authorized"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b4" source-connector="declined">
          <transition target-connector="in1" target-path="./b2.1">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
        </branch>
        <branch basename="b5" source-connector="review">
          <transition target-connector="in1" target-path="./b3.1">
            <transition-display>
              <bend-point relative-to="source" x="-1" y="1"/>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
    </segment>
  </branch>
</pipeline>
