<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline>
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Renders a full product detail page. If the http parameter &quot;format&quot; is set to &quot;json&quot; the product details are rendered as JSON response.</description>
        </text-node>
        <node-display width="2" x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Show">
    <segment>
      <node>
        <start-node name="Show" secure="false"/>
        <node-display x="1" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="CurrentSession.custom.ordersummary" key="To_0"/>
          <key-binding alias="CurrentSession.custom.placeOrder" key="To_1"/>
          <key-binding alias="CurrentSession.custom.singleship" key="To_2"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="UpdatePageMetaData" pipelet-set-identifier="bc_api">
          <key-binding alias="null" key="Category"/>
          <key-binding alias="null" key="Content"/>
          <key-binding alias="null" key="Folder"/>
          <key-binding alias="Product.shortDescription != null ? Product.shortDescription.getMarkup() : &quot;&quot;" key="DefaultDescription"/>
          <key-binding alias="Product.name" key="DefaultKeywords"/>
          <key-binding alias="Product.ID + &quot; - &quot; + dw.system.Site.getCurrent().name" key="DefaultTitle"/>
          <key-binding alias="Product" key="Product"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Product.template == null" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="Product.master" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="product/GetDefaultVariant.ds"/>
                      <key-binding alias="ScriptLog" key="ScriptLog"/>
                      <key-binding alias="CurrentHttpParameterMap.get(&quot;dwvar_&quot;+Product.ID+&quot;_color&quot;).value" key="colorId"/>
                      <key-binding alias="Product" key="Prod"/>
                      <key-binding alias="DefaultVariant" key="newProduct"/>
                      <key-binding alias="Product.variationModel" key="PVM"/>
                      <key-binding alias="CurrentVariationModel" key="CurrentVariationModel"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in2" target-path="../+3"/>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="../+3"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/product"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="true" name="Product.template"/>
        </interaction-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Renders a full product detail page. If the http parameter &quot;format&quot; is set to &quot;json&quot; the product details are rendered as JSON response.</description>
        </text-node>
        <node-display width="2" x="7" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_4">
    <segment>
      <node>
        <text-node>
          <description>Determines a product based on the given ID.</description>
        </text-node>
        <node-display x="4" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Detail">
    <segment>
      <node>
        <start-node name="Detail" secure="false"/>
        <node-display x="7" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Product.template == null" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="Product-GetProductXmlData"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="('StrandsEnabled' in dw.system.Site.current.preferences.custom &amp;&amp; dw.system.Site.current.preferences.custom.StrandsEnabled)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <call-node start-name-ref="Strands-GetProductAccessories"/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/productdetail"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="true" name="Product.template"/>
        </interaction-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetProduct">
    <segment>
      <node>
        <start-node call-mode="private" name="GetProduct" secure="false"/>
        <node-display x="4" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.pid.stringValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
                <key-binding alias="Product" key="Product"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="Product.productSet" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <call-node start-name-ref="Product-HandleOfflineSetProducts"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="online">
                      <transition target-connector="in1" target-path="../+2"/>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="../../+2"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="4" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="2"/>
            </node>
            <transition target-connector="in3" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-2" y="0"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateProductVariationSelections" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentVariationModel" key="ProductVariationModel"/>
                <key-binding alias="null" key="CustomFormPrefix"/>
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="Product" key="SelectedProduct"/>
                <key-binding alias="ProductVariationModels" key="ProductVariationModels"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdateProductOptionSelections" pipelet-set-identifier="bc_api">
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="CurrentOptionModel" key="ProductOptionModel"/>
                <key-binding alias="null" key="CustomFormPrefix"/>
                <key-binding alias="ProductOptionModels" key="ProductOptionModels"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="ok"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="error/notfound"/>
        </interaction-node>
        <node-display x="0" y="4"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_7">
    <segment>
      <node>
        <text-node>
          <description>Returns product variants data as a JSON. Called via product.js (loadVariation).
Input:
pid (required) - product ID</description>
        </text-node>
        <node-display width="2" x="10" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetVariants">
    <segment>
      <node>
        <start-node name="GetVariants" secure="false"/>
        <node-display x="10" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/variationsjson"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_9">
    <segment>
      <node>
        <text-node>
          <description>Returns product availability data as a JSON object. Called via product.js (reloadAvailability).
Input:
pid (required) - product ID
quantity (required) - the quantity to use for determining avalability</description>
        </text-node>
        <node-display width="2" x="14" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetAvailability">
    <segment>
      <node>
        <start-node name="GetAvailability" secure="false"/>
        <node-display x="14" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/availabilityjson"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="HitTile">
    <segment>
      <node>
        <start-node name="HitTile" secure="false"/>
        <node-display x="17" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.vpid.stringValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentHttpParameterMap.vpid.stringValue" key="ProductID"/>
                <key-binding alias="FirstProduct" key="Product"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                    <bend-point relative-to="source" x="2" y="1"/>
                    <bend-point relative-to="target" x="1" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
          <bend-point relative-to="source" x="2" y="1"/>
          <bend-point relative-to="target" x="1" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="'supportpage' in CurrentHttpParameterMap &amp;&amp; CurrentHttpParameterMap.supportpage.booleanValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="true" key="From_0"/>
                <key-binding alias="supportpage" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/productsearchhittilesupport"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="Product.custom.soldOnEncompass==true" condition-operator="expr"/>
        <node-display orientation="horizontal" x="1" y="0"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/productsearchhittilesupport"/>
              </interaction-node>
              <node-display x="1" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/productsearchhittile"/>
        </interaction-node>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetOwnerUrls">
    <segment>
      <node>
        <start-node name="GetOwnerUrls" secure="false"/>
        <node-display x="20" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/GetProductXmlData.ds"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="Product.custom.ownerManualXmlData.toString()" key="OwnerContent"/>
          <key-binding alias="OwnerShipUrls" key="UrlList"/>
          <key-binding alias="OwnerShipUrls" key="OwnerUrlList"/>
          <key-binding alias="WarrentyUrls" key="WarrentyContentUrlList"/>
          <key-binding alias="Product.custom.warrentyInfoXmlData.toString()" key="WarrentyContent"/>
          <key-binding alias="Product.custom.videoUrlXmlData.toString()" key="VideoContent"/>
          <key-binding alias="VideoUrls" key="VideoContentUrlList"/>
          <key-binding alias="('operatingInstructions' in Product.custom &amp;&amp; Product.custom.operatingInstructions)?Product.custom.operatingInstructions.toString():&quot;&quot;" key="XmlStringContent"/>
          <key-binding alias="OwnerShipUrls" key="ContentUrlList"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="OwnerShipUrls" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="target" x="0" y="1"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetWarrentyUrls">
    <segment>
      <node>
        <start-node name="GetWarrentyUrls" secure="false"/>
        <node-display x="22" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/GetProductXmlData.ds"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="Product.custom.ownerManualXmlData.toString()" key="OwnerContent"/>
          <key-binding alias="OwnerShipUrls" key="UrlList"/>
          <key-binding alias="OwnerShipUrls" key="OwnerUrlList"/>
          <key-binding alias="WarrentyUrls" key="WarrentyContentUrlList"/>
          <key-binding alias="Product.custom.warrentyInfoXmlData.toString()" key="WarrentyContent"/>
          <key-binding alias="Product.custom.videoUrlXmlData.toString()" key="VideoContent"/>
          <key-binding alias="VideoUrls" key="VideoContentUrlList"/>
          <key-binding alias="('warranty' in Product.custom &amp;&amp; Product.custom.warranty)?Product.custom.warranty.toString():&quot;&quot;" key="XmlStringContent"/>
          <key-binding alias="WarrentyUrls" key="ContentUrlList"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="WarrentyUrls" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="target" x="0" y="1"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetProductXmlData">
    <segment>
      <node>
        <start-node name="GetProductXmlData" secure="false"/>
        <node-display x="26" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetOwnerUrls"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetWarrentyUrls"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetProductVideoUrls"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProductGallaryVideoUrls"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProductSupportData"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetDWRecommendations"/>
        <node-display x="0" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetProductVideoUrls">
    <segment>
      <node>
        <start-node name="GetProductVideoUrls" secure="false"/>
        <node-display x="24" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/GetProductVideoXmlData.ds"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="('videos' in Product.custom &amp;&amp; Product.custom.videos)?Product.custom.videos.toString():&quot;&quot;" key="XmlStringContent"/>
          <key-binding alias="VideoUrls" key="ContentUrlList"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="VideoUrls" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="target" x="0" y="1"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_16">
    <segment>
      <node>
        <text-node>
          <description>fix for : PANC-676</description>
        </text-node>
        <node-display x="28" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetDWRecommendations">
    <segment>
      <node>
        <start-node name="GetDWRecommendations" secure="false"/>
        <node-display x="28" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/GetDWRecommendations.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Product" key="product"/>
          <key-binding alias="productset" key="productset"/>
          <key-binding alias="set" key="set"/>
          <key-binding alias="cat" key="rootCategory"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="DownloadSpecs">
    <segment>
      <node>
        <start-node name="DownloadSpecs" secure="false"/>
        <node-display x="30" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/downloadproductspecs"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_19">
    <segment>
      <node>
        <text-node>
          <description>Determine if at least there is 1 online SetProduct in case it is s Product Set. if all of the Set Products are offline then we return not found view.</description>
        </text-node>
        <node-display height="2" x="3" y="5"/>
      </node>
    </segment>
  </branch>
  <branch basename="HandleOfflineSetProducts">
    <segment>
      <node>
        <start-node call-mode="private" name="HandleOfflineSetProducts" secure="false"/>
        <node-display x="10" y="5"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="false" key="From_0"/>
          <key-binding alias="Online" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <loop-node element-key="SetProduct" iterator-key="Product.getProductSetProducts()"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="do">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="SetProduct.online" key="From_0"/>
                <key-binding alias="Online" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="Online" condition-operator="expr"/>
              <node-display orientation="horizontal" x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="online"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="loop" target-path="..">
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="source" x="-1" y="1"/>
                <bend-point relative-to="target" x="-1" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_21">
    <segment>
      <node>
        <text-node>
          <description>Returns true if at least one SetProduct is online otherwise false i.e. when all SetProducts are offline.
Expects Product instance</description>
        </text-node>
        <node-display height="2" x="12" y="4"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetProductShippingMessage">
    <segment>
      <node>
        <start-node name="GetProductShippingMessage" secure="false"/>
        <node-display x="14" y="6"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/shippingmessagejson"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetProductGallaryVideoUrls">
    <segment>
      <node>
        <start-node name="GetProductGallaryVideoUrls" secure="false"/>
        <node-display x="30" y="6"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/GetProductVideoXmlData.ds"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="('galleryVideos' in Product.custom &amp;&amp; Product.custom.galleryVideos)?Product.custom.galleryVideos.toString():&quot;&quot;" key="XmlStringContent"/>
          <key-binding alias="GalleryVideoUrls" key="ContentUrlList"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="GalleryVideoUrls" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="1" y="1"/>
            </node>
            <transition target-connector="in3" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Productnav">
    <segment>
      <node>
        <start-node name="Productnav" secure="false"/>
        <node-display x="7" y="9"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Search" pipelet-set-identifier="bc_api">
          <config-property key="SearchContent" value="true"/>
          <config-property key="SearchProduct" value="true"/>
          <config-property key="DisallowOfflineCategory" value="true"/>
          <config-property key="RecursiveCategorySearch" value="true"/>
          <config-property key="RecursiveFolderSearch" value="true"/>
          <key-binding alias="CurrentHttpParameterMap.q.value" key="SearchPhrase"/>
          <key-binding alias="CurrentHttpParameterMap.psortb1.value" key="SortBy1"/>
          <key-binding alias="CurrentHttpParameterMap.psortd1.intValue" key="SortBy1Direction"/>
          <key-binding alias="CurrentHttpParameterMap.psortb2.value" key="SortBy2"/>
          <key-binding alias="CurrentHttpParameterMap.psortd2.intValue" key="SortBy2Direction"/>
          <key-binding alias="CurrentHttpParameterMap.psortb3.value" key="SortBy3"/>
          <key-binding alias="CurrentHttpParameterMap.psortd3.intValue" key="SortBy3Direction"/>
          <key-binding alias="CurrentHttpParameterMap.pmin.doubleValue" key="PriceMin"/>
          <key-binding alias="CurrentHttpParameterMap.pmax.doubleValue" key="PriceMax"/>
          <key-binding alias="null" key="RefineBy5Name"/>
          <key-binding alias="null" key="RefineBy5Phrase"/>
          <key-binding alias="CurrentHttpParameterMap.cgid.value" key="CategoryID"/>
          <key-binding alias="ProductSearchResult" key="ProductSearchModel"/>
          <key-binding alias="CurrentHttpParameterMap.cid.value" key="ContentID"/>
          <key-binding alias="CurrentHttpParameterMap.fdid.value" key="FolderID"/>
          <key-binding alias="ContentSearchResult" key="ContentSearchModel"/>
          <key-binding alias="&quot;prefn&quot;" key="RefineByNamePrefix"/>
          <key-binding alias="&quot;prefv&quot;" key="RefineByPhrasePrefix"/>
          <key-binding alias="CurrentHttpParameterMap.srule.value" key="SortingRuleID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Paging" pipelet-set-identifier="bc_api">
          <config-property key="DefaultPageSize" value="12"/>
          <key-binding alias="ProductSearchResult.productSearchHits" key="Objects"/>
          <key-binding alias="3" key="PageSize"/>
          <key-binding alias="CurrentHttpParameterMap.start.intValue - 2" key="Start"/>
          <key-binding alias="ProductSearchResult.count" key="ObjectsCount"/>
          <key-binding alias="ProductPagingModel" key="PagingModel"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="search/productnav"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Variation">
    <segment>
      <node>
        <start-node name="Variation" secure="false"/>
        <node-display x="10" y="10"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.pid.stringValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
                <key-binding alias="Product" key="Product"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="UpdateProductVariationSelections" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentVariationModel" key="ProductVariationModel"/>
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="Product" key="SelectedProduct"/>
                <key-binding alias="ProductVariationModels" key="ProductVariationModels"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="UpdateProductOptionSelections" pipelet-set-identifier="bc_api">
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="CurrentOptionModel" key="ProductOptionModel"/>
                <key-binding alias="null" key="CustomFormPrefix"/>
                <key-binding alias="ProductOptionModels" key="ProductOptionModels"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="Product.master" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="product/GetDefaultVariant.ds"/>
                      <key-binding alias="ScriptLog" key="ScriptLog"/>
                      <key-binding alias="CurrentHttpParameterMap.get(&quot;dwvar_&quot;+Product.ID+&quot;_color&quot;).value" key="colorId"/>
                      <key-binding alias="Product" key="Prod"/>
                      <key-binding alias="DefaultVariant" key="newProduct"/>
                      <key-binding alias="CurrentVariationModel" key="PVM"/>
                      <key-binding alias="CurrentVariationModel" key="CurrentVariationModel"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in1" target-path="../+1">
                        <transition-display>
                          <bend-point relative-to="source" x="1" y="0"/>
                          <bend-point relative-to="source" x="1" y="2"/>
                          <bend-point relative-to="target" x="1" y="0"/>
                        </transition-display>
                      </transition>
                    </branch>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="false" key="From_0"/>
                      <key-binding alias="resetAttributes" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in2" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="target" x="1" y="-2"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="3"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="Product-GetProductXmlData"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="('StrandsEnabled' in dw.system.Site.current.preferences.custom &amp;&amp; dw.system.Site.current.preferences.custom.StrandsEnabled)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <call-node start-name-ref="Strands-GetProductAccessories"/>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="empty(CurrentHttpParameterMap.format.stringValue)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <interaction-node transaction-required="false">
                      <template buffered="true" dynamic="false" name="product/product"/>
                    </interaction-node>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="CurrentHttpParameterMap.source.stringValue == 'bonus'" condition-operator="expr"/>
              <node-display orientation="horizontal" x="1" y="0"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in1"/>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="1" y="0"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <call-node start-name-ref="Cart-GetBasket"/>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="cart/GetBonusDiscountLineItem.ds"/>
                      <key-binding alias="BonusDiscountLineItem" key="BonusDiscountLineItem"/>
                      <key-binding alias="CurrentHttpParameterMap.bonusDiscountLineItemUUID.stringValue" key="uuid"/>
                      <key-binding alias="Basket.bonusDiscountLineItems" key="BonusDiscountLineItems"/>
                      <key-binding alias="ScriptLog" key="ScriptLog"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in1"/>
                      <segment>
                        <node>
                          <join-node/>
                          <node-display x="1" y="0"/>
                        </node>
                        <transition target-connector="in1" target-path="../+1">
                          <transition-display>
                            <bend-point relative-to="source" x="0" y="2"/>
                          </transition-display>
                        </transition>
                      </segment>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <interaction-node transaction-required="false">
                      <template buffered="true" dynamic="false" name="product/components/bonusproduct"/>
                    </interaction-node>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="product/GetVariationProductLazyLoadUrl.ds"/>
                <key-binding alias="Log" key="ScriptLog"/>
                <key-binding alias="CurrentHttpParameterMap" key="CurrHttpParameter"/>
                <key-binding alias="CurrentVariationModel" key="PVM"/>
                <key-binding alias="Product" key="VariationProduct"/>
                <key-binding alias="lazyURL" key="LazyLoadUrl"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b4" source-connector="error">
                <transition target-connector="in1" target-path="./+1">
                  <transition-display>
                    <bend-point relative-to="target" x="0" y="0"/>
                  </transition-display>
                </transition>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="true" key="From_0"/>
                <key-binding alias="GetImages" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="LazyloadPlaceholder" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/productdetail"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="error/notfound"/>
        </interaction-node>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="VariationPS">
    <segment>
      <node>
        <start-node name="VariationPS" secure="false"/>
        <node-display x="14" y="10"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.pid.stringValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
                <key-binding alias="Product" key="Product"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="UpdateProductVariationSelections" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentVariationModel" key="ProductVariationModel"/>
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="Product" key="SelectedProduct"/>
                <key-binding alias="ProductVariationModels" key="ProductVariationModels"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="Product.master" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="product/GetDefaultVariant.ds"/>
                      <key-binding alias="ScriptLog" key="ScriptLog"/>
                      <key-binding alias="CurrentHttpParameterMap.get(&quot;dwvar_&quot;+Product.ID+&quot;_color&quot;).value" key="colorId"/>
                      <key-binding alias="Product" key="Prod"/>
                      <key-binding alias="Product" key="newProduct"/>
                      <key-binding alias="CurrentVariationModel" key="PVM"/>
                      <key-binding alias="CurrentVariationModel" key="CurrentVariationModel"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in1" target-path="../+1"/>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="../+1"/>
                </segment>
              </branch>
            </node>
            <transition target-connector="in2" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
                <bend-point relative-to="target" x="1" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="2"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="empty(CurrentHttpParameterMap.format.stringValue)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <interaction-node transaction-required="false">
                      <template buffered="true" dynamic="false" name="product/product"/>
                    </interaction-node>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/components/productsetproduct"/>
              </interaction-node>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="error/notfound"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ShowCartPopup">
    <segment>
      <node>
        <start-node name="ShowCartPopup" secure="false"/>
        <node-display x="20" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.catalog.ProductMgr.getProduct(CurrentHttpParameterMap.pid.value)" key="From_0"/>
          <key-binding alias="Product" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="checkout/cart/cartpopup"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ShowPixleeData">
    <segment>
      <node>
        <start-node name="ShowPixleeData" secure="false"/>
        <node-display x="22" y="8"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
          <key-binding alias="Product" key="Product"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="widgets/pdpwidget"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetSwatchProduct">
    <segment>
      <node>
        <start-node name="GetSwatchProduct" secure="false"/>
        <node-display x="24" y="9"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Product.master" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="product/GetDefaultVariant.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="CurrentHttpParameterMap.get(&quot;dwvar_&quot;+Product.ID+&quot;_color&quot;).value" key="colorId"/>
                <key-binding alias="Product" key="Prod"/>
                <key-binding alias="DefaultVariant" key="newProduct"/>
                <key-binding alias="Product.variationModel" key="PVM"/>
                <key-binding alias="CurrentVariationModel" key="CurrentVariationModel"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="../+3"/>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+3"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="0"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="2"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="('format' in CurrentHttpParameterMap &amp;&amp; CurrentHttpParameterMap.format.stringValue == 'ajax')" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="new Object()" key="From_0"/>
                <key-binding alias="JSONResponse" key="To_0"/>
                <key-binding alias="((Product.availabilityModel.availability &gt; 0) &amp;&amp; !Product.custom.supportOnly &amp;&amp; Product.getPriceModel().getPrice().value &gt; 0 &amp;&amp; (Product.categorized || Product.getVariationModel().getMaster().categorized))?true:false" key="From_1"/>
                <key-binding alias="JSONResponse.success" key="To_1"/>
                <key-binding alias="Product.availabilityModel.availabilityStatus" key="From_2"/>
                <key-binding alias="JSONResponse.availabilityStatus" key="To_2"/>
                <key-binding alias="Product.ID" key="From_3"/>
                <key-binding alias="JSONResponse.pid" key="To_3"/>
                <key-binding alias="Product.custom.hideAddtoCart" key="From_4"/>
                <key-binding alias="JSONResponse.hideAddtocart" key="To_4"/>
                <key-binding alias="Product.custom.supportOnly" key="From_5"/>
                <key-binding alias="JSONResponse.supportOnly" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="(JSONResponse.availabilityStatus == 'BACKORDER' &amp;&amp; Product.custom.isPreOrderable)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="JSONResponse.availabilityStatus" key="To_0"/>
                      <key-binding alias="dw.catalog.ProductAvailabilityModel.AVAILABILITY_STATUS_PREORDER" key="From_0"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <transition target-connector="in1" target-path="../../+2">
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="2"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <transition target-connector="in2" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="new Object()" key="From_0"/>
          <key-binding alias="JSONResponse" key="To_0"/>
          <key-binding alias="Product.ID" key="From_1"/>
          <key-binding alias="JSONResponse.pid" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="('StrandsEnabled' in dw.system.Site.current.preferences.custom &amp;&amp; dw.system.Site.current.preferences.custom.StrandsEnabled)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="Strands-GetProductAccessories"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="RespIDS" key="From_0"/>
                <key-binding alias="JSONResponse.strandsIDS" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="&quot;&quot;" key="From_0"/>
          <key-binding alias="JSONResponse.strandsIDS" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="1" y="2"/>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="util/responsejson"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetProductSupportData">
    <segment>
      <node>
        <start-node name="GetProductSupportData" secure="false"/>
        <node-display x="26" y="10"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/GetProductSupportData.ds"/>
          <key-binding alias="log" key="ScriptLog"/>
          <key-binding alias="Product" key="Product"/>
          <key-binding alias="AdvancedFeaturesManuals" key="advancedFeaturesManuals"/>
          <key-binding alias="AdditionalDocuments" key="additionalDocuments"/>
          <key-binding alias="Driver" key="driver"/>
          <key-binding alias="EHelpManual" key="eHelpManuals"/>
          <key-binding alias="Firmware" key="firmware"/>
          <key-binding alias="HowToGuide" key="howToGuide"/>
          <key-binding alias="OperatingInstructions" key="operatingInstructions"/>
          <key-binding alias="QuickSetupGuide" key="quickSetupGuide"/>
          <key-binding alias="DimensionSheet" key="dimensionSheet"/>
          <key-binding alias="Others" key="others"/>
          <key-binding alias="other" key="other"/>
          <key-binding alias="software" key="software"/>
          <key-binding alias="wifiConnectionGuides" key="wifiConnectionGuides"/>
          <key-binding alias="ProductOwnerImages" key="productOwnerImages"/>
          <key-binding alias="Faqs" key="faqs"/>
          <key-binding alias="FirmwareSupport" key="firmwareSupport"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./b3.2">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-2"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/GetProductVideoXmlData.ds"/>
          <key-binding alias="Log" key="ScriptLog"/>
          <key-binding alias="('supportvideos' in Product.custom &amp;&amp; !empty(Product.custom.supportvideos))?Product.custom.supportvideos.toString():&quot;&quot;" key="XmlStringContent"/>
          <key-binding alias="supportVideoUrls" key="ContentUrlList"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="null" key="From_0"/>
                <key-binding alias="supportVideoUrls" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display orientation="horizontal" x="1" y="-1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="0" y="4"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetGalleryImages">
    <segment>
      <node>
        <start-node name="GetGalleryImages" secure="false"/>
        <node-display x="30" y="11"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="'lazyload' in CurrentHttpParameterMap &amp;&amp; !(CurrentHttpParameterMap.lazyload.booleanValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/components/gallery/galleryimages"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProductGallaryVideoUrls"/>
        <node-display x="1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/gallery"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_32">
    <segment>
      <node>
        <text-node/>
        <node-display x="1" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="ShowInCategory">
    <segment>
      <node>
        <start-node name="ShowInCategory" secure="false"/>
        <node-display x="1" y="14"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <jump-node start-name-ref="Product-Show"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_34">
    <segment>
      <node>
        <text-node/>
        <node-display x="4" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_35">
    <segment>
      <node>
        <text-node/>
        <node-display width="2" x="5" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="IncludeLastVisited">
    <segment>
      <node>
        <start-node name="IncludeLastVisited" secure="false"/>
        <node-display x="4" y="14"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetLastVisitedProducts" pipelet-set-identifier="bc_api">
          <key-binding alias="4" key="MaxLength"/>
          <key-binding alias="LastVisitedProducts" key="Products"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/lastvisited"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="FormatPrices">
    <segment>
      <node>
        <start-node name="FormatPrices" secure="false"/>
        <node-display x="7" y="14"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="util/formatprices"/>
        </interaction-node>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_38">
    <segment>
      <node>
        <text-node/>
        <node-display x="1" y="17"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetBonusProducts">
    <segment>
      <node>
        <start-node name="GetBonusProducts" secure="false"/>
        <node-display x="1" y="18"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cart/GetBonusDiscountLineItem.ds"/>
          <key-binding alias="BonusDiscountLineItem" key="BonusDiscountLineItem"/>
          <key-binding alias="CurrentHttpParameterMap.bonusDiscountLineItemUUID.stringValue" key="uuid"/>
          <key-binding alias="Basket.bonusDiscountLineItems" key="BonusDiscountLineItems"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/bonusproductgrid"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="AddBonusProduct">
    <segment>
      <node>
        <start-node name="AddBonusProduct" secure="false"/>
        <node-display x="4" y="17"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="AddBonusProductToBasket" pipelet-set-identifier="bc_api">
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="BonusDiscountLineItem" key="BonusDiscountLineItem"/>
          <key-binding alias="Product" key="Product"/>
          <key-binding alias="Quantity" key="Quantity"/>
          <key-binding alias="null" key="ProductOptionModel"/>
          <key-binding alias="null" key="ProductLineItem"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetSetItem">
    <segment>
      <node>
        <start-node name="GetSetItem" secure="false"/>
        <node-display x="7" y="19"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="true" key="From_0"/>
          <key-binding alias="isSet" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/productsetproduct"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="RecentlyViewedProducts">
    <segment>
      <node>
        <start-node name="RecentlyViewedProducts" secure="false"/>
        <node-display x="19" y="18"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetLastVisitedProducts" pipelet-set-identifier="bc_api">
          <key-binding alias="50" key="MaxLength"/>
          <key-binding alias="LastVisitedProducts" key="Products"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/GetLastVisitedVariant.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="LastVisitedProducts" key="ExampleIn"/>
          <key-binding alias="variant" key="ExampleOut"/>
          <key-binding alias="LastVisitedProducts" key="lastVisitedProducts"/>
          <key-binding alias="LastVisitedProducts" key="Product"/>
          <key-binding alias="LastVisitedProducts" key="LastVisitedProducts"/>
          <key-binding alias="lastVariants" key="lastVariants"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/lastvisitedproducts"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetPLPRecommendations">
    <segment>
      <node>
        <start-node name="GetPLPRecommendations" secure="false"/>
        <node-display x="2" y="23"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="('StrandsEnabled' in dw.system.Site.current.preferences.custom &amp;&amp; dw.system.Site.current.preferences.custom.StrandsEnabled)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="Strands-GetProductAccessories"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="new Object()" key="From_0"/>
                <key-binding alias="JSONResponse" key="To_0"/>
                <key-binding alias="RespIDS" key="From_1"/>
                <key-binding alias="JSONResponse.strandsIDS" key="To_1"/>
                <key-binding alias="true" key="From_2"/>
                <key-binding alias="JSONResponse.success" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="new Object()" key="From_0"/>
          <key-binding alias="JSONResponse" key="To_0"/>
          <key-binding alias="&quot;&quot;" key="From_1"/>
          <key-binding alias="JSONResponse.strandsIDS" key="To_1"/>
          <key-binding alias="false" key="From_2"/>
          <key-binding alias="JSONResponse.success" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="1" y="2"/>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="util/responsejson"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetPLPInventory">
    <segment>
      <node>
        <start-node name="GetPLPInventory" secure="false"/>
        <node-display x="4" y="22"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
          <key-binding alias="Product" key="Product"/>
          <key-binding alias="CurrentHttpParameterMap.pid.value" key="ProductID"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node/>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/plpavailability"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="LicenseAgreement">
    <segment>
      <node>
        <start-node name="LicenseAgreement" secure="false"/>
        <node-display x="6" y="26"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/licenseagreement"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="LoadAwards">
    <segment>
      <node>
        <start-node name="LoadAwards" secure="false"/>
        <node-display x="15" y="24"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.pid.stringValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
                <key-binding alias="Product" key="Product"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="Product-GetProductSupportData"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/components/productawards"/>
              </interaction-node>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in2" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="error/notfound"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="LoadAccessories">
    <segment>
      <node>
        <start-node name="LoadAccessories" secure="false"/>
        <node-display x="18" y="24"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="('StrandsEnabled' in dw.system.Site.current.preferences.custom &amp;&amp; dw.system.Site.current.preferences.custom.StrandsEnabled)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="Product-GetProduct"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <call-node start-name-ref="Strands-GetProductAccessories"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/components/productaccessories"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="StockMessage">
    <segment>
      <node>
        <start-node name="StockMessage" secure="false"/>
        <node-display x="20" y="24"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
          <key-binding alias="Product" key="Product"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Product" key="From_0"/>
          <key-binding alias="product" key="To_0"/>
          <key-binding alias="CurrentHttpParameterMap.p_hidedates.booleanValue" key="From_1"/>
          <key-binding alias="p_hidedates" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/availability"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ShippingMessage">
    <segment>
      <node>
        <start-node name="ShippingMessage" secure="false"/>
        <node-display x="21" y="24"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
          <key-binding alias="Product" key="Product"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Product" key="From_0"/>
          <key-binding alias="product" key="To_0"/>
          <key-binding alias="CurrentHttpParameterMap.ordercreationdate.value" key="From_1"/>
          <key-binding alias="ordercreationdate" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="util/CreateEstimatedDates.ds"/>
          <key-binding alias="EstimatedateLog" key="ScriptLog"/>
          <key-binding alias="expressDate1" key="expressDate1"/>
          <key-binding alias="expressDate2" key="expressDate2"/>
          <key-binding alias="overnight" key="overnight"/>
          <key-binding alias="secondDay" key="secondDay"/>
          <key-binding alias="stdDate1" key="stdDate1"/>
          <key-binding alias="stdDate2" key="stdDate2"/>
          <key-binding alias="updatedDate1" key="updatedDate1"/>
          <key-binding alias="updatedDate2" key="updatedDate2"/>
          <key-binding alias="whiteGloveDate1" key="whiteGloveDate1"/>
          <key-binding alias="whiteGloveDate2" key="whiteGloveDate2"/>
          <key-binding alias="hoursdiff" key="hourdiff"/>
          <key-binding alias="minutesdiff" key="minutesdiff"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/ministockmessage"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetWarrantyCondition">
    <segment>
      <node>
        <start-node name="GetWarrantyCondition" secure="false"/>
        <node-display x="22" y="24"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
          <key-binding alias="Product" key="Product"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/warrantyconditions"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetQtyCondition">
    <segment>
      <node>
        <start-node name="GetQtyCondition" secure="false"/>
        <node-display x="23" y="24"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
          <key-binding alias="Product" key="Product"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/productqtyconditions"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetInventryConditions">
    <segment>
      <node>
        <start-node name="GetInventryConditions" secure="false"/>
        <node-display x="25" y="24"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
          <key-binding alias="Product" key="Product"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1"/>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="('plpPage' in CurrentHttpParameterMap &amp;&amp; CurrentHttpParameterMap.plpPage.booleanValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/productinventryconditionsplp"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/productinventryconditions"/>
        </interaction-node>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="showProductCompare">
    <segment>
      <node>
        <start-node name="showProductCompare" secure="false"/>
        <node-display x="6" y="29"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
          <key-binding alias="null" key="Product"/>
          <key-binding alias="null" key="ProductID"/>
        </pipelet-node>
        <node-display x="0" y="2"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in"/>
          <segment>
            <node>
              <end-node name="not Found"/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Product.master" condition-operator="expr"/>
        <node-display x="0" y="2"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="Product" key="From_0"/>
                <key-binding alias="MasterProduct" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="2"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="4" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <key-binding alias="Product.getVariationModel().master" key="From_0"/>
          <key-binding alias="MasterProduct" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="2" y="2"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-2" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="product/ProductCompareChart.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in"/>
          <segment>
            <node>
              <end-node/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/productcompare"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="ShowSwatches">
    <segment>
      <node>
        <start-node name="ShowSwatches" secure="false"/>
        <node-display x="11" y="28"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="('compPage' in CurrentHttpParameterMap &amp;&amp; CurrentHttpParameterMap.compPage.booleanValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="product/compare/comparevariations"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/variations"/>
        </interaction-node>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
