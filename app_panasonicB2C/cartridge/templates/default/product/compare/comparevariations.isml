<iscontent type="text/html" charset="UTF-8" compact="true"/>
<isscript>
	importScript("int_dis:product/ProductImageSO.ds");
</isscript>
<iscomment>
	This template renders a product in the search result using a ProductSearchHit object.
</iscomment>

<isif condition="${!empty(pdict.Product) }">

	<iscomment>Set the product of the product search hit locally for reuse</iscomment>
	<isset name="Product" value="${pdict.Product}" scope="page"/>
	<isset name="OrgProduct" value="${null}" scope="page"/>

	<iscomment>
		Get the colors selectable from the current product master or variant range if we
		need to determine them based on a search result.
	</iscomment>
	<isscript>
		var selectableColors : dw.util.Collection = new dw.util.ArrayList();
		var colorVarAttr : dw.catalog.ProductVariationAttribute = null;
		var imageSize = 'medium';
		var PVM : dw.catalog.ProductVariationModel = Product.variationModel;
		var selectedColor, imageSource, image;
		var defaultVarient = PVM.defaultVariant;
		if (PVM) {
			colorVarAttr = PVM.getProductVariationAttribute('color');
			if (colorVarAttr != null) {
				selectableColors = PVM.getFilteredValues(colorVarAttr);
			}
			if (Product.isMaster() && PVM.defaultVariant) {
				if (colorVarAttr !== null) {
						imageSource = PVM.defaultVariant;
					selectedColor = imageSource.variationModel.getSelectedValue(colorVarAttr);
				} else {
					imageSource = PVM.master;
				}
			} else if (Product.isVariant()) {
				imageSource = selectedColor = PVM.getSelectedValue(colorVarAttr);
				if (!imageSource) {
					if (!PVM.variants.isEmpty()) {
						imageSource = PVM.variants[0];
						selectedColor = imageSource.variationModel.getSelectedValue(colorVarAttr);
					}
				}
			} else {
				imageSource = Product;
			}
		} else {
			imageSource = Product;
		}
		image1 = imageSource.getImage(imageSize, 0);
	</isscript>
<iscomment>
	Render the color swatch secion for a product search hit. The swatches depend on the products the search hit actually represents.
	Doesn't necessarily equal all variants of a product master, since only a sub set of variants could be represented by the search
	hit (a variant group). We show color swatches only for variant groups represented by a product search hit.
</iscomment>
		<isif condition="${!empty(selectableColors) && selectableColors.size() > 1 && !empty(colorVarAttr)}">
			<div class="product-swatches">
				<iscomment>render a link to the palette and hide the actual palette if there are more than five colors contained</iscomment>
				<iscomment>render the palette, the first swatch is always preselected</iscomment>
				<div class="swatch-list">
				<ul>
					<isloop items="${selectableColors}" var="colorValue" status="varloop">
						<iscomment>Determine the swatch and the thumbnail for this color</iscomment>
						<isset name="colorSwatch" value="${new ProductImage('image20X20', colorValue, 0 )}" scope="page"/>
						<isset name="colorThumbnail" value="${new ProductImage('image360X360', colorValue, 0 )}" scope="page"/>
						<iscomment>If images couldn't be determined, display a "no image" thumbnail</iscomment>
						<isif condition="${!empty(colorSwatch)}">
							<isset name="swatchUrl" value="${colorSwatch.getURL()}" scope="page"/>
							<isset name="swatchAlt" value="${colorSwatch.alt}" scope="page"/>
							<isset name="swatchTitle" value="${colorSwatch.title}" scope="page"/>
						<iselse/>
							<isset name="swatchUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
							<isset name="swatchAlt" value="${colorValue.displayValue}" scope="page"/>
							<isset name="swatchTitle" value="${colorValue.displayValue}" scope="page"/>
						</isif>
						<isif condition="${!empty(colorThumbnail)}">
							<isset name="thumbnailUrl" value="${colorThumbnail.getURL()}" scope="page"/>
							<isset name="thumbnailAlt" value="${colorThumbnail.alt}" scope="page"/>
							<isset name="thumbnailTitle" value="${colorThumbnail.title}" scope="page"/>
						<iselse/>
							<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
							<isset name="thumbnailAlt" value="${colorValue.displayValue}" scope="page"/>
							<isset name="thumbnailTitle" value="${colorValue.displayValue}" scope="page"/>
						</isif>
						<isif condition="${!empty(selectedColor)}">
							<isset name="preselectCurrentSwatch" value="${colorValue.value == selectedColor.value}" scope="page"/>
						<iselse/>
							<isset name="preselectCurrentSwatch" value="${varloop.first}" scope="page"/>
						</isif>
		
						<iscomment>build the proper URL and append the search query parameters</iscomment>
						<isset name="swatchproductUrl" value="${Product.variationModel.url('Product-Show', colorVarAttr, colorValue.value)}" scope="page"/>
						<isif condition="${!empty(pdict.ProductSearchResult)}">
							<isset name="swatchproductUrl" value="${pdict.ProductSearchResult.url( swatchproductUrl )}" scope="page"/>
						</isif>
		
						<iscomment>render a single swatch, the url to the proper product detail page is contained in the href of the swatch link</iscomment>
						<li>
							<a href="${swatchproductUrl}" tileUrl="${URLUtils.abs('Product-GetSwatchProduct').toString().concat('?pid=').concat(((Product.master)?(Product.ID):(Product.getVariationModel().getMaster().ID))).concat('&').concat(swatchproductUrl.toString().split('?')[1])}" class="swatch ${(preselectCurrentSwatch) ? 'selected' : ''}" title="<isprint value="${colorValue.displayValue}"/>">
								<img src="${swatchUrl}" alt="${swatchAlt}" title="${swatchTitle}" data-thumb='{"src":"${thumbnailUrl}","alt":"<isprint value="${thumbnailAlt}"/>","title":"<isprint value="${thumbnailTitle}"/>"}'/>
							</a>
						</li>
					</isloop>
				</ul>
				</div>
			</div>
		</isif>
</isif>