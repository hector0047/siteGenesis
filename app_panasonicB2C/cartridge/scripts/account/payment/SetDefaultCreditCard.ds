/**
 * SetDefaultCreditCard.ds.ds
 *
 * Finds the credit card with the given UUID, and mark it as default
 *
 * @input CreditCardUUID : String UUID of the credit card payment instrument to find
 * @input CustomerPaymentInstruments : dw.util.Collection the payment instruments to search
 */
importPackage( dw.customer );
importPackage( dw.system );
importPackage( dw.util );

function execute( pdict : PipelineDictionary ) : Number
{
	try{
		var uuid : String = pdict.CreditCardUUID;
		var instruments : Collection = pdict.CustomerPaymentInstruments;
		var creditCardInstrument : dw.customer.CustomerPaymentInstrument = null;
		
		// ensure mandatory parameter 'CreditCardUUID' and 'CustomerPaymentInstruments' 
		// in pipeline dictionary and collection is not empty
		if( uuid == null || instruments == null || instruments.empty)
		{
			return PIPELET_ERROR;
		}
		
		// find credit card in payment instruments
		var instrumentsIter : Iterator = instruments.iterator();
		while( instrumentsIter.hasNext() )
		{
			creditCardInstrument = instrumentsIter.next();
			if( uuid.equals( creditCardInstrument.UUID ) )
			{
				creditCardInstrument.custom.defaultCreditCard = true;
			}
			else{
				creditCardInstrument.custom.defaultCreditCard = false;
			}
		}
	}
	catch(e){
		Logger.error("Error while executing the script SetDefaultCreditCard.ds. Error : "+e.message);
		return PIPELET_ERROR;
	}
	return PIPELET_NEXT;
}