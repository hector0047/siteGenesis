/**
*   @input ProductId : String
*   @input productSpecMapList : dw.util.ArrayList
*   @input productSpecKeySet : dw.util.HashSet
*	@outoput paramList : dw.util.ArrayList
*
*/

importPackage( dw.util );
importPackage( dw.system );
importPackage( dw.catalog );
importScript("product/ProductUtils.ds");

function executeChart( args : PipelineDictionary ) : Number{	
	var productID : String = args.ProductId;
	var product : Product = ProductMgr.getProduct(productID);		
	if(product.isMaster()){
		product = product.getVariationModel().getDefaultVariant();
	}
	var techSpecHashMap : HashMap = new HashMap();
	
	if('compareProductSpecification' in product.custom){
		var techSpecGroups = product.custom.compareProductSpecification.split('\n');	
		for each(var techSpec : String in techSpecGroups) {
			if(!empty(techSpec)){
				var modelNumberLine : boolean = techSpec.toString().trim().split('|').indexOf('MODEL#') < 0 ? false : true;
				if(modelNumberLine){
					techSpecHashMap.put(techSpec.toString().trim());
				}else{
					techSpecHashMap.put(techSpec.toString().trim());
					
					}
						
			}
		}			
				
	}else{		
	}
			
	return PIPELET_NEXT;
}

/*if(!modelNumberLine){			
				args.productSpecKeySet.add(techSpec.toString().trim().split('|')[0].toString());
				if(techSpec.toString().trim().split('|')[0] != undefined && techSpec.toString().trim().split('|')[1] !=undefined){
					techSpecHashMap.put(techSpec.toString().trim().split('|')[0].toString(), techSpec.toString().trim().split('|')[1].toString());		
				}		
			}*/