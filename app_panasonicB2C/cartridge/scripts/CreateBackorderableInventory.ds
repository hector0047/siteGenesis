/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-  @output File : String
* Fix for PANC-523 Enhancement
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.catalog );
importPackage( dw.customer );
importPackage( dw.io );
importPackage( dw.net );
importPackage( dw.object );
importPackage( dw.campaign );
importPackage( dw.web );
importPackage( dw.crypto );

function execute( args : PipelineDictionary ) : Number
{
	var fileWriter : FileWriter = null;
	var itemsNo : Number = 0;	
	// current date/time
	var calendar : Calendar = new Calendar();
	calendar.timeZone = "GMT";
	var dateString : String = StringUtils.formatCalendar(calendar, "yyyyMMdd");
	var filePath = File.IMPEX +'/src/backorder';
	//create new file for the specified paths
	var dir : File = new File(filePath);
	var b = dir.mkdirs();
   	
	var initialfilename : String = "backorder" + File.SEPARATOR+ "Inventory_Backorder_"+dateString+".xml";
	var archivefilename : String = "archive"  + File.SEPARATOR + "Inventory_Backorder_"+dateString+".xml" ;
	try{
		var backorderinventoryimport : dw.io.File = new dw.io.File(dw.io.File.IMPEX + dw.io.File.SEPARATOR + "src" + dw.io.File.SEPARATOR + initialfilename);
		
		if( backorderinventoryimport.exists() ){
			var archivebackorder : dw.io.File = new dw.io.File(dw.io.File.IMPEX + dw.io.File.SEPARATOR + "src"  + dw.io.File.SEPARATOR + archivefilename);
			backorderinventoryimport.renameTo(archivebackorder);
			backorderinventoryimport.createNewFile();
		}else{
			backorderinventoryimport.createNewFile();
		}
			
		fileWriter = new FileWriter(backorderinventoryimport,'UTF-8');
		var xmlwriter : XMLStreamWriter = new XMLStreamWriter(fileWriter);
		
		var productList : SeekableIterator = ProductMgr.queryAllSiteProducts();
		
		xmlwriter.writeRaw('<?xml version="1.0" encoding="utf-8"?>\n<inventory xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.demandware.com/xml/impex/inventory/2007-05-31">\n');
		xmlwriter.writeRaw('<inventory-list>\n<header list-id="inventory">\n<default-instock>false</default-instock>\n<description>DW Internal Inventory</description>\n</header>\n<records>\n');
		
		//PANC-962 && Fix for PANC-875 : Streamline inventory feed / buy button control
		//Farhan : PANC-1500 Changes as per Nicole's ticket 
		while(productList.hasNext()) {
			var product : Product = productList.next();
			if(!product.online || product.custom.isWarranty){ // || product.custom.supportOnly){
				
			//}else if(product.custom.supportOnly){
			//	xmlwriter.writeRaw('<record product-id="' + product.ID +'">\n\t<preorder-backorder-handling>none</preorder-backorder-handling>\n</record>\n');
			}else if(product.custom.isBackOrderable && !product.custom.supportOnly){
				//xmlwriter.writeRaw('<record product-idD="' + product.ID +'">\n\t<preorder-backorder-handling>backorder</preorder-backorder-handling>\n\t</record>\n');	
				xmlwriter.writeRaw('<record product-id="' + product.ID +'">\n\t<preorder-backorder-handling>backorder</preorder-backorder-handling>\n\t<preorder-backorder-allocation>' + dw.system.Site.getCurrent().getCustomPreferenceValue("backorderAllocationQuantity") +'</preorder-backorder-allocation>\n</record>\n');
			}else{
				xmlwriter.writeRaw('<record product-id="' + product.ID +'">\n\t<preorder-backorder-handling>none</preorder-backorder-handling>\n</record>\n');	
			}
			itemsNo++;
		}
		xmlwriter.writeRaw('\n</records>');
		xmlwriter.writeRaw('\n</inventory-list>');
		xmlwriter.writeRaw('\n</inventory>');
	}
	finally{
		if(xmlwriter != null){
			xmlwriter.flush();
			xmlwriter.close();
		}
	}
	return PIPELET_NEXT;
}	





   

