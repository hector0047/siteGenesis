/**
 * Base class for all SAP SOAP webservice implementations
 * @class
 */
var AbstractSoapService = require('./AbstractBaseService').extend(
/** @lends AbstractSoapService.prototype */
{

    /** 
     * Create a new SAP SOAP web service.
     * It will be used to 
     * @constructs
     * @augments AbstractBaseService
	 * @param callFrom the service name
	 * @param serviceObject object
	 */ 
	init: function(callFrom, serviceObject) {
		this._super(callFrom, serviceObject);
		/** Authentication method BASIC, if not equal to BASIC the username/password properties are not 
		    set at the stub. Other values could be i.e. HEADER. */
		this.authentication = this.authentication || "BASIC";
		this.initServiceClient();
		this.initSoapStub();		
	},

	/** 
	 * fetches url from credentials custom object
	 */ 
	initSoapStub: function () {		
		//Changes done : since we are using webreferences2 as well
		 if ('setTimeout' in this.serviceClient) {
			this.serviceClient.setTimeout(this.configuration.getTimeout());
			if(this.authentication === "BASIC"){
				this.serviceClient.setUsername(this.configuration.getCredentials().getUser());		
				this.serviceClient.setPassword(this.configuration.getCredentials().getPassword());
			}
			if(this.configuration.getCredentials().getUrl()){
				this.serviceClient._setProperty(dw.rpc.Stub.ENDPOINT_ADDRESS_PROPERTY, this.configuration.getCredentials().getUrl());		
			}
	     } else {
	         var WSUtil: dw.ws.WSUtil = require('dw/ws/WSUtil');
	         WSUtil.setRequestTimeout(this.configuration.getTimeout(), this.serviceClient);
	         if(this.configuration.getCredentials().getUser() && this.configuration.getCredentials().getPassword()){
				 WSUtil.setUserNamePassword(this.configuration.getCredentials().getUser(), this.configuration.getCredentials().getPassword(), this.serviceClient);
	             WSUtil.setProperty(dw.ws.Port.ENDPOINT_ADDRESS_PROPERTY, this.configuration.getCredentials().getUrl(), this.serviceClient);
	         }
	     }
	}
});

module.exports = AbstractSoapService;