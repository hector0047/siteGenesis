/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*	
*	 @input Basket : dw.order.Basket Authorize total amount from all credit cards in basket, unless PaymentInstrument specified
*	 @input PaymentInstrument : dw.order.OrderPaymentInstrument If specified, use amount from its single PaymentTransaction
*    @output CybersourcePurchaseTotals : Object
*
*/
importPackage( dw.system );
importPackage( dw.util);
importPackage( dw.order);
importPackage( dw.value);
importScript('cybersource/Cybersource_PurchaseTotals_Object.ds');
function execute( pdict : PipelineDictionary ) : Number
{
	var basket : Basket = pdict.Basket;
	var paymentInstrument : OrderPaymentInstrument = pdict.PaymentInstrument;
  
    var purchaseObject : PurchaseTotals_Object = new PurchaseTotals_Object();
    var amount : Money;
    var tax : Money;
    var freight : Money;
    
    // Get totals for one payment instrument if specified, else for entire basket
    if (!empty(paymentInstrument)) 
    {
    	amount = paymentInstrument.paymentTransaction.amount;
    	
    	// If the payment instrument is associated with a specific shipment, factor out tax and shipping costs
    	if ('shipment' in paymentInstrument.custom && !empty(paymentInstrument.custom.shipment) ) 
    	{
			var shipment : Shipment = basket.getShipment(paymentInstrument.custom.shipment);
			if (!empty(basket.getShipment(paymentInstrument.custom.shipment)) )
			{
				// Get tax for shipment
				tax = shipment.getTotalTax();
					
				// Get shipping cost for shipment
				freight = shipment.getShippingTotalNetPrice();
			}
		}
    } 
    else 
    {
	    var ccPaymentInstruments = basket.getPaymentInstruments(PaymentInstrument.METHOD_CREDIT_CARD);
	    for each (var pi : OrderPaymentInstrument in ccPaymentInstruments) 
	    {
	    	amount = amount.add(pi.paymentTransaction.amount);	 
	    }
	    
	    // Get tax for basket
		tax = basket.getTotalTax().valueOrNull;

		// Get shipping cost for basket
		freight = basket.getShippingTotalNetPrice();
    }
	purchaseObject.setCurrency(amount.currencyCode);
	purchaseObject.setGrandTotalAmount(StringUtils.formatNumber(amount.valueOrNull,"000000.00","en_US"));
	purchaseObject.setTaxAmount(StringUtils.formatNumber(tax.valueOrNull,"000000.00","en_US"));
	purchaseObject.setFreightAmount(StringUtils.formatNumber(freight.valueOrNull,"000000.00","en_US"));
    
    pdict.CybersourcePurchaseTotals = purchaseObject;
    
    return PIPELET_NEXT;
}
