/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*	 @input billingAddressForm : dw.web.FormElement
*	 @input BMLForm : dw.web.FormElement
*	 @input ipAddress : String
*    @input Order : dw.order.Order
*    @input ReadFromOrder : Boolean
*    @output CyberSourceBillTo : Object
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.order );
importScript('int_cybersource:cybersource/Cybersource_BillTo_Object.ds');
function execute( pdict : PipelineDictionary ) : Number
{
	var billToObject: BillTo_Object = new BillTo_Object();
	var callCenterIPAddresses : ArrayList = Site.getCurrent().getCustomPreferenceValue("CsCallCenterIPAddress");
	
	if ( pdict.ReadFromOrder )
	{
		var order : Order = pdict.Order;
		var billingAddress : OrderAddress = order.billingAddress;

		if( !empty(billingAddress)&&!empty(order) ) {
			billToObject.setFirstName  ( billingAddress.firstName );
			billToObject.setLastName   ( billingAddress.lastName );
			billToObject.setStreet1    ( billingAddress.address1 );
			billToObject.setStreet2    ( billingAddress.address2 );
			billToObject.setCity       ( billingAddress.city );
			billToObject.setState      ( billingAddress.stateCode );
			billToObject.setPostalCode ( billingAddress.postalCode );
			billToObject.setCountry    ( billingAddress.countryCode );
			billToObject.setPhoneNumber( billingAddress.phone );
			billToObject.setEmail      ( order.customerEmail );
		}
	}
	else
	{
		var billAddrForm : dw.web.FormElement =  pdict.billingAddressForm;
		
		if ('firstName' in billAddrForm) billToObject.setFirstName(billAddrForm.firstName.value);
		if ('lastName' in billAddrForm) billToObject.setLastName(billAddrForm.lastName.value);
		if ('address1' in billAddrForm) billToObject.setStreet1(billAddrForm.address1.value);
		if ('address2' in billAddrForm) billToObject.setStreet2(billAddrForm.address2.value);
		if ('city' in billAddrForm) billToObject.setCity(billAddrForm.city.value);
		if ('states' in billAddrForm && 'state' in billAddrForm.states) billToObject.setState(billAddrForm.states.state.value);
		if ('zip' in billAddrForm) billToObject.setPostalCode(billAddrForm.zip.value);
		if ('country' in billAddrForm) billToObject.setCountry(billAddrForm.country.value);
		if ('phone' in billAddrForm) billToObject.setPhoneNumber(billAddrForm.phone.value);
		// Look for email address in a few different places, depending on whether using
		// form definition from paymentinstruments.xml or billingaddress.xml or...?
		if ('email' in billAddrForm)
		{
			if ('emailAddress' in billAddrForm.email) 
			{
				billToObject.setEmail(billAddrForm.email.emailAddress.value);
			}
			else
			{
				billToObject.setEmail(billAddrForm.email.value);
			}
		}
	
	}
	
	var foundIP : Boolean = false;
	if(!empty(callCenterIPAddresses) && callCenterIPAddresses.length > 0) {
		for each(var IPAddress : String in callCenterIPAddresses) {
			if ( pdict.ipAddress.equals(IPAddress)) {
				foundIP = true;
				break;								
			}
		}
	}
			
	if(!foundIP) {
		billToObject.setIpAddress(pdict.ipAddress);
	}		

	//  @@@@@@@@@@@   BML part @@@@@@@@@@@@@	
	var bmlform :  dw.web.FormElement =  pdict.BMLForm;
	if(bmlform != null)
	{
		// billToObject.setDateOfBirth("19541217");
		// billToObject.setSsn("000001234"); 
		
		if(bmlform.year.value != null)
		{	
			if (bmlform.year.value.toString() != null && bmlform.year.value.toString() != "")
			{  
				billToObject.setDateOfBirth(bmlform.year.value.toString()+ StringUtils.formatNumber(bmlform.month.value, "00", "en_US") + StringUtils.formatNumber(bmlform.day.value, "00", "en_US"));
				billToObject.setSsn('00000' + bmlform.ssn.value);			
			}
		}
	}
	pdict.CyberSourceBillTo = billToObject;
	
    return PIPELET_NEXT;
}
