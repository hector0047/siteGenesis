<iscontent type="text/javascript" charset="UTF-8" compact="true"/>

<isscript>
	importPackage( dw.system );
	importPackage( dw.catalog );
	importPackage( dw.util );
	importPackage( dw.value );
	importPackage( dw.web );
	
	var clientcache = {
		LISTING_INFINITE_SCROLL : (dw.system.Site.getCurrent().getCustomPreferenceValue('enableInfiniteScroll') ? true : false),
		LISTING_REFINE_SORT : true,
		LISTING_SEARCHSUGGEST_LEGACY : (dw.system.Site.getCurrent().getCustomPreferenceValue('enhancedSearchSuggestions') ? true : false)
	};	
	
	
	// application constants
	var constants = {	
		AVAIL_STATUS_IN_STOCK 		: ProductAvailabilityModel.AVAILABILITY_STATUS_IN_STOCK,
		AVAIL_STATUS_PREORDER 		: ProductAvailabilityModel.AVAILABILITY_STATUS_PREORDER,
		AVAIL_STATUS_BACKORDER 		: ProductAvailabilityModel.AVAILABILITY_STATUS_BACKORDER,
		AVAIL_STATUS_NOT_AVAILABLE 	: ProductAvailabilityModel.AVAILABILITY_STATUS_NOT_AVAILABLE,
		PI_METHOD_GIFT_CERTIFICATE	: dw.order.PaymentInstrument.METHOD_GIFT_CERTIFICATE
	};
	
	// application resources
	var resources =  {
			
		SHIP_QualifiesFor 				: Resource.msg('shipment.qualifiesfor','checkout',null),		
		CC_LOAD_ERROR 					: Resource.msg('billing.creditcardloaderror','checkout',null),				
	
		// Registry resources
		REG_ADDR_ERROR 					: Resource.msg('global.couldntloadaddress','locale',null),
		
		// bonus products messages
		BONUS_PRODUCT 					: Resource.msg('product.bonusproduct','product',null),
		BONUS_PRODUCTS 					: Resource.msg('product.bonusproducts','product',null),
		SELECT_BONUS_PRODUCTS 			: Resource.msg('product.selectbonusproducts','product',null),
		SELECT_BONUS_PRODUCT 			: Resource.msg('product.selectbonusproduct','product',null),
		BONUS_PRODUCT_MAX 				: Resource.msg('product.bonusproductsmax','product',null),
		SIMPLE_SEARCH 					: Resource.msg('simplesearch.searchtext','search', null),
		SUBSCRIBE_EMAIL_DEFAULT			: Resource.msg('forms.subscribe.email.default','forms', 'Email Address'),
				
		CURRENCY_SYMBOL					: Currency.getCurrency(dw.system.Site.current.getDefaultCurrency()).symbol,
		MISSINGVAL						: Resource.msg('global.missingval','locale',null),
		SERVER_ERROR 					: Resource.msg('global.servererror','locale',null),
		MISSING_LIB 					: Resource.msg('global.missinglib','locale',null),
		BAD_RESPONSE					: Resource.msg('global.badresponse','locale',null),
		INVALID_PHONE					: Resource.msg('global.invalidphone','locale',null),
		INVALID_EMAIL					: Resource.msg('profile.emailparseerror','forms',null),
		INVALID_LOGIN_EMAIL					: Resource.msg('login.username.missing-error','forms',null),
		REMOVE							: Resource.msg('global.remove','locale',null),
		QTY								: Resource.msg('global.qty','locale',null),
		EMPTY_IMG_ALT					: Resource.msg('global.remove', 'locale', null),
		COMPARE_BUTTON_LABEL			: Resource.msg('productcomparewidget.compareitemsbutton', 'search', null),
		COMPARE_CONFIRMATION			: Resource.msg('productcomparewidget.maxproducts', 'search', null),
		COMPARE_REMOVE_FAIL				: Resource.msg('productcomparewidget.removefail', 'search', null),
		COMPARE_ADD_FAIL				: Resource.msg('productcomparewidget.addfail', 'search', null),
		ADD_TO_CART_FAIL				: Resource.msg('cart.unableToAdd', 'checkout', null),	
		REGISTRY_SEARCH_ADVANCED_CLOSE	: Resource.msg('giftregistry.closeadvanced', 'account', null),
					
		GIFT_CERT_INVALID				: Resource.msg('billing.giftcertinvalid', 'checkout', null),
		GIFT_CERT_BALANCE				: Resource.msg('billing.giftcertbalance', 'checkout', null),
		GIFT_CERT_AMOUNT_INVALID		: Resource.msg('giftcert.amountvalueerror', 'forms', null),
		GIFT_CERT_MISSING				: Resource.msg('billing.giftcertidmissing', 'checkout', null),
		INVALID_OWNER                   : Resource.msg('billing.ownerparseerror','checkout',null),
		INVALID_CARD_NUMBER				: Resource.msg('billing.cardnoinvalid','checkout',null),
		INVALID_CVN_NUMBER				: Resource.msg('billing.cardcvvinvalid','checkout',null),
		COUPON_CODE_MISSING				: Resource.msg('cart.COUPON_CODE_MISSING','checkout', null),
		ADDRESS_POBOX_ERROR				: Resource.msg('shipping.poboxerror','checkout', null),	
		
		COOKIES_DISABLED				: Resource.msg('browsertoolscheck.cookies','components',null),
		BML_AGREE_TO_TERMS				: Resource.msg('bml.termserror', 'forms', null),
		CHAR_LIMIT_MSG					: Resource.msg('forms.character.limit', 'forms', null),
		CONFEMAIL					    : Resource.msg('forms.emailnotmatching', 'forms', null),
		CONFIRM_DELETE					: Resource.msg('forms.confirm.delete', 'forms', null),
		CONFIRM_CANCEL					: Resource.msg('forms.confirm.cancelorder', 'forms', null),
		TITLE_ORDER						: Resource.msg('forms.title.order', 'forms', null),
		TITLE_GIFTREGISTRY				: Resource.msg('forms.title.giftregistry', 'forms', null),
		TITLE_ADDRESS					: Resource.msg('forms.title.address', 'forms', null),
		TITLE_CREDITCARD				: Resource.msg('forms.title.creditcard', 'forms', null),
		SERVER_CONNECTION_ERROR 		: Resource.msg('global.serverconnection','locale','Server connection failed!'),
		IN_STOCK_DATE					: Resource.msg('global.inStockDate', 'locale', null),
		INIFINITESCROLL					: Resource.msg('paginginformation.infinite-scroll','search',null),
		STORE_NEAR_YOU					: Resource.msg('storelist.lightbox.whatsavailable','storepickup','What\'s available at a store near you'),
		SELECT_STORE					: Resource.msg('storelist.lightbox.selectstore','storepickup',null),
		SELECTED_STORE					: Resource.msg('storelist.lightbox.selectedstore','storepickup',null),
		PREFERRED_STORE					: Resource.msg('storelist.lightbox.preferredstore','storepickup',null),
		SET_PREFERRED_STORE				: Resource.msg('storelist.lightbox.setpreferredstore','storepickup',null),
		ENTER_ZIP						: Resource.msg('storelist.lightbox.enterzip','storepickup',null),
		INVALID_ZIP						: Resource.msg('storelist.lightbox.invalidpostalcode','storepickup',null),
		INVALID_MODEL					: Resource.msg('storelocator.modelerror','forms',null),
		SEARCH							: Resource.msg('storelist.lightbox.search','storepickup',null),
		CHANGE_LOCATION					: Resource.msg('storelist.lightbox.changelocation','storepickup',null),
		CONTINUE_WITH_STORE				: Resource.msg('storelist.lightbox.continuewithstore','storepickup',null),
		CONTINUE						: Resource.msg('storelist.lightbox.continue','storepickup',null),
		SEE_MORE						: Resource.msg('storelist.lightbox.seemore','storepickup',null),
		SEE_LESS						: Resource.msg('storelist.lightbox.seeless','storepickup',null),
		quickview						: Resource.msg('global.quickview','locale',null),
		UPDATE_NAME_SUCCESS				: Resource.msg('account.updatenamesuccess','account',null),
		UPDATE_NAME_FAILURE				: Resource.msg('account.updatenamefailure','account',null),
		UPDATE_EMAIL_SUCCESS			: Resource.msg('account.updateemailsuccess','account',null),
		UPDATE_EMAIL_MISMATCH			: Resource.msg('account.updateemailmismatch','account',null),
		UPDATE_EMAIL_DUPLICATE			: Resource.msg('account.updateduplicateemail','account',null),
		UPDATE_EMAIL_FAILURE			: Resource.msg('account.updateemailfailure','account',null),
		UPDATE_EMAIL_WITH_CURRENT_PW    : Resource.msg('account.updateemailwithcorrectpw','account',null),
		UPDATE_PASSWORD_SUCCESS			: Resource.msg('account.updatepasswordsuccess','account',null),
		UPDATE_PASSWORD_MISMATCH		: Resource.msg('account.updatepasswordmismatch','account',null),
		UPDATE_PASSWORD_DUPLICATE		: Resource.msg('account.updateduplicatepassword','account',null),
		UPDATE_PASSWORD_FAILURE			: Resource.msg('account.updatepasswordfailure','account',null),
		UPDATE_PERSONAL_INFO_SUCCESS	: Resource.msg('account.updatepersonalinfosuccess','account',null),
		UPDATE_PERSONAL_INFO_FAILURE	: Resource.msg('account.updatepersonalinfofailure','account',null),
		SHIPPING_METHOD_ERROR			: Resource.msg('shipping.mehtod.invalid','checkout',null),
		INVALID_marketo_EMAIL			: Resource.msg('marketo.emailparseerror','forms',null)
	};
	
	// additional resources 
	resources[ProductAvailabilityModel.AVAILABILITY_STATUS_IN_STOCK] = Resource.msg('global.instock','locale',null);
	resources["QTY_" + ProductAvailabilityModel.AVAILABILITY_STATUS_IN_STOCK] = Resource.msg('global.quantityinstock','locale',null);
	resources[ProductAvailabilityModel.AVAILABILITY_STATUS_PREORDER] = Resource.msg('global.allpreorder','locale',null);
	resources["QTY_" + ProductAvailabilityModel.AVAILABILITY_STATUS_PREORDER] = Resource.msg('global.quantitypreorder','locale',null);
	resources["REMAIN_" + ProductAvailabilityModel.AVAILABILITY_STATUS_PREORDER] = Resource.msg('global.remainingpreorder','locale',null);
	resources[ProductAvailabilityModel.AVAILABILITY_STATUS_BACKORDER] = Resource.msg('global.allbackorder','locale',null);
	resources["QTY_" + ProductAvailabilityModel.AVAILABILITY_STATUS_BACKORDER] = Resource.msg('global.quantitybackorder','locale',null);
	resources["REMAIN_" + ProductAvailabilityModel.AVAILABILITY_STATUS_BACKORDER] = Resource.msg('global.remainingbackorder','locale',null);
	resources[ProductAvailabilityModel.AVAILABILITY_STATUS_NOT_AVAILABLE] = Resource.msg('global.allnotavailable','locale',null);
	resources["REMAIN_" + ProductAvailabilityModel.AVAILABILITY_STATUS_NOT_AVAILABLE] = Resource.msg('global.remainingnotavailable','locale',null);
			
	// application urls
	var urls =  {
		appResources				: URLUtils.url('Resources-Load').toString(),
		pageInclude					: URLUtils.url('Page-Include').toString(),
		continueUrl 				: request.isHttpSecure() ? URLUtils.httpsContinue().toString() : URLUtils.httpContinue().toString(),
		staticPath					: URLUtils.staticURL("/").toString(),
		addGiftCert					: URLUtils.url('GiftCert-Purchase').toString(),		
		minicartGC					: URLUtils.url('GiftCert-ShowMiniCart').toString(),		
		addProduct					: URLUtils.url('Cart-AddProduct').toString(),		
		minicart					: URLUtils.url('Cart-MiniAddProduct').toString(),
		minicartrefresh				: URLUtils.url('Cart-MiniCart').toString(),
		cartShow 					: URLUtils.https('Cart-Show').toString(),
		cosummary					: URLUtils.https('COSummary-Start').toString(),
		giftRegAdd					: URLUtils.https('Address-GetAddressDetails', 'addressID', '').toString(),
		paymentsList				: URLUtils.https('PaymentInstruments-List').toString(),
		addressesList				: URLUtils.https('Address-List').toString(),
		wishlistAddress				: URLUtils.https('Wishlist-SetShippingAddress').toString(),
		deleteAddress				: URLUtils.url('Address-Delete').toString(),
		deleteCard					: URLUtils.url('PaymentInstruments-Delete').toString(),
		getProductUrl 				: URLUtils.url('Product-Show').toString(),
		getPixleeWidget				: URLUtils.url('Product-ShowPixleeData').toString(),
		getBonusProducts			: URLUtils.url('Product-GetBonusProducts').toString(),
		addBonusProduct				: URLUtils.url('Cart-AddBonusProduct').toString(),	
		getSetItem 					: URLUtils.url('Product-GetSetItem').toString(),
		productDetail 				: URLUtils.url('Product-Detail').toString(),
		productAwrds 				: URLUtils.url('Product-LoadAwards').toString(),
		productAccessories 			: URLUtils.url('Product-LoadAccessories').toString(),
		getAvailability				: URLUtils.url('Product-GetAvailability').toString(),			
		removeImg 					: URLUtils.staticURL('/images/interface/icon_remove.gif').toString(),
		markerImg 					: URLUtils.staticURL('/images/interface/marker.png').toString(),
		searchsuggest 				: URLUtils.url('Search-GetSuggestions').toString(),	
		productNav 					: URLUtils.url('Product-Productnav').toString(),	
		summaryRefreshURL			: URLUtils.url('COBilling-UpdateSummary').toString(),
		billingSelectCC				: URLUtils.https('COBilling-SelectCreditCard').toString(),
		updateAddressDetails		: URLUtils.https('COShipping-UpdateAddressDetails').toString(),
		updateAddressDetailsBilling : URLUtils.https('COBilling-UpdateAddressDetails').toString(),	
		shippingMethodsJSON			: URLUtils.https('COShipping-GetApplicableShippingMethodsJSON').toString(),
		shippingMethodsList			: URLUtils.https('COShipping-UpdateShippingMethodList').toString(),
		selectShippingMethodsList	: URLUtils.https('COShipping-SelectShippingMethod').toString(),
		addressValidationURL		: URLUtils.http('COShipping-AddressDAV').toString(),
		resetPaymentForms 			: URLUtils.url('COBilling-ResetPaymentForms').toString(),
		compareShow					: URLUtils.url('Compare-Show').toString(),
		compareAdd					: URLUtils.url('Compare-AddProduct').toString(),	
		compareRemove				: URLUtils.url('Compare-RemoveProduct').toString(),
		compareEmptyImage			: URLUtils.staticURL('/images/comparewidgetempty.png').toString(),
		giftCardCheckBalance		: URLUtils.https('COBilling-GetGiftCertificateBalance').toString(),
		redeemGiftCert				: URLUtils.https('COBilling-RedeemGiftCertificateJson').toString(),
		addCoupon					: URLUtils.https('Cart-AddCouponJson').toString(),	
		sessionsaveaddress	        : URLUtils.url('COBilling-SessionSave').toString(),
		sessionsaveBillingaddress	: URLUtils.url('COBilling-SessionSaveBillingAddress').toString(),		
		storeLocatorPage   			: URLUtils.https('StoreInventory-Find').toString(),
		storesInventory				: URLUtils.https('StoreInventory-Inventory').toString(),
		storesLookup				: URLUtils.https('StoreInventory-Lookup').toString(),
		setPreferredStore			: URLUtils.url('StoreInventory-SetPreferredStore').toString(),
		getPreferredStore			: URLUtils.url('StoreInventory-GetPreferredStore').toString(),
		setZipCode					: URLUtils.url('StoreInventory-SetZipCode').toString(),
		getZipCode					: URLUtils.url('StoreInventory-GetZipCode').toString(),
		billing						: URLUtils.url('COBilling-Start').toString(),
		sessionsaveaddress			: URLUtils.url('COBilling-SessionSave').toString(),		
		currencyConverter			: URLUtils.url('Currency-SetSessionCurrency').toString(),
		addEditAddress				: URLUtils.url('COShippingMultiple-AddEditAddressJSON').toString(),
		updatename				    : URLUtils.url('Account-UpdateName').toString(),
		updateemail					: URLUtils.url('Account-UpdateEmail').toString(),
		updatepassword				: URLUtils.url('Account-UpdatePassword').toString(),
		updatepersonalinformation   : URLUtils.url('Account-UpdatePersonalInformation').toString(),
		checkshipment				: URLUtils.url('COShipping-CheckShipment').toString(),
		marketoEmailSubscription	: URLUtils.url('MarketoEmailSubscription-Subscribe').toString(),
		marketoEmailSubscriptionprofile	: URLUtils.url('MarketoEmailSubscriptionForProfile-Subscribe').toString(),
		marketoEmailSubscriptionBilling	: URLUtils.url('MarketoEmailSubscriptionForBilling-Subscribe').toString(),
	    getProductShippingMessage	: URLUtils.url('Product-GetProductShippingMessage').toString(),
		showCartPopup				: URLUtils.url('Product-ShowCartPopup').toString(),
		removeProductFromCart		: URLUtils.url('Cart-RemoveProduct').toString(),
		showCouponAjax				: URLUtils.url('Cart-ShowCouponStatus').toString(),
		addaddress					: URLUtils.url('Address-AddAddress').toString(),
		editaddress					: URLUtils.url('Address-EditAddress').toString(),
		addcreditcard				: URLUtils.url('PaymentInstruments-AddCreditCard').toString(),
		editcreditcard				: URLUtils.url('PaymentInstruments-EditCreditCard').toString(),
		getPLPRecommendations		: URLUtils.url('Product-GetPLPRecommendations').toString(),
		LicenseAgreement			: URLUtils.url('Product-LicenseAgreement').toString(),
		sessionSaveCvn  			: URLUtils.url('COBilling-SessionSaveCVN').toString(),
		showStores        			: URLUtils.url('Stores-ShowStores').toString(),
		showChatDropdowns        	: URLUtils.url('CustomerService-ContactUs').toString(),
		filterByDate	        	: URLUtils.url('AboutUs-FilterContent').toString(),
		sbScheduleRequest        	: URLUtils.url('SBCheckout-Authorize').toString(),
		sbContinueToReview        	: URLUtils.url('SBCheckout-Review').toString(),
		showSBWarranty				: URLUtils.url('ServiceBench-WarrantyConfirm').toString(),
		returnPolicy				: URLUtils.url('SelfServiceReturn-Summary').toString(),
		billingSelectCCSB			: URLUtils.https('SBCheckout-SelectCreditCard').toString(),
		productGallerysection       : URLUtils.url('Product-GetGalleryImages').toString()
	};
	
	userSettings = {
		zip : pdict.CurrentSession.custom.zipcode=="null"?null:pdict.CurrentSession.custom.zipcode,
		storeId : pdict.CurrentSession.custom.storeId=="null"?null:pdict.CurrentSession.custom.storeId,
		poboxRegexMatcher : (('POBoxMatcher' in dw.system.Site.current.preferences.custom && !empty(dw.system.Site.current.preferences.custom.POBoxMatcher))?dw.system.Site.getCurrent().getCustomPreferenceValue('POBoxMatcher').toString():''),
		myRegistryJavaScriptUrl : (('javaScriptUrl' in dw.system.Site.current.preferences.custom && !empty(dw.system.Site.current.preferences.custom.javaScriptUrl))?dw.system.Site.getCurrent().getCustomPreferenceValue('javaScriptUrl').toString().trim():'')
	};
</isscript>
(function(app){	
	app.constants = <isprint value="${JSON.stringify(constants)}" encoding="off"/>;
	app.resources = <isprint value="${JSON.stringify(resources)}" encoding="off"/>;	
	app.urls = <isprint value="${JSON.stringify(urls)}" encoding="off"/>;	
	app.clientcache = <isprint value="${JSON.stringify(clientcache)}" encoding="off"/>;
	app.user = <isprint value="${JSON.stringify(userSettings)}" encoding="off"/>;
	app.enabledStorePickup = ${('enableStorelocator' in dw.system.Site.current.preferences.custom && dw.system.Site.current.preferences.custom.enableStorelocator)};
	app.protocol = "${pdict.CurrentRequest.httpProtocol}";
	app.sbWarrantyStatus = "${pdict.SbWarrantyStatus}";
	app.reviewPage = "${pdict.ReviewPage}";
	app.isDisablePOShipping  = ${('isDisablePOShipping' in dw.system.Site.current.preferences.custom && dw.system.Site.current.preferences.custom.isDisablePOShipping)};
	app.enableMyRegistry = ${('enableMyRegistry' in dw.system.Site.current.preferences.custom && dw.system.Site.current.preferences.custom.enableMyRegistry)};
	app.enableLazyLoad = ${('isEnableLazyLoading' in dw.system.Site.current.preferences.custom && dw.system.Site.current.preferences.custom.isEnableLazyLoading)};
	app.enableSalesforceChat = ${('enableSalesforceChat' in dw.system.Site.current.preferences.custom && dw.system.Site.current.preferences.custom.enableSalesforceChat)};
	app.SALESFORCE_POST_ONLINE_ID = "${('salesforce-chat-onlinelinkID' in dw.system.Site.current.preferences.custom)?dw.system.Site.getCurrent().getCustomPreferenceValue('salesforce-chat-onlinelinkID'):''}";
	app.SALESFORCE_POST_OFFLINE_ID = "${('salesforce-chat-offlinelinkID' in dw.system.Site.current.preferences.custom)?dw.system.Site.getCurrent().getCustomPreferenceValue('salesforce-chat-offlinelinkID'):''}";
	app.SALESFORCE_PRE_OFFLINE_ID = "${('salesforce-chat-offlinelinkID-prechat' in dw.system.Site.current.preferences.custom)?dw.system.Site.getCurrent().getCustomPreferenceValue('salesforce-chat-offlinelinkID-prechat'):''}";
	app.SALESFORCE_PRE_ONLINE_ID = "${('salesforce-chat-onlinelinkID-prechat' in dw.system.Site.current.preferences.custom)?dw.system.Site.getCurrent().getCustomPreferenceValue('salesforce-chat-onlinelinkID-prechat'):''}";
}(window.app = window.app || {}));