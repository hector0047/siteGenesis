<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="Subscribe">
    <segment>
      <node>
        <start-node name="Subscribe" secure="false"/>
        <node-display x="1" y="0"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="pipelets/MarketoEmailSubscription.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="CurrentHttpParameterMap.email.value" key="CurrentHttpParameterMap"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue(&quot;marketoEndpointURL&quot;)" key="MarketoEndpointUrl"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue(&quot;marketoAuthToken&quot;)" key="AccessToken"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue(&quot;marketoClientId&quot;)" key="marketoClientId"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue(&quot;marketoSecretKey&quot;)" key="marketoClientSecretKey"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue(&quot;marketoEndpointURL&quot;)" key="marketoEndpointUrl"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue(&quot;marketoAuthTokenEndPointURL&quot;)" key="marketoTokenEndpointUrl"/>
          <key-binding alias="CurrentHttpParameterMap.email.stringValue || CurrentForms.profile.customer.email.value || CurrentForms.billing.billingAddress.email.emailAddress.value" key="email"/>
          <key-binding alias="CurrentHttpParameterMap.LPDMember? CurrentHttpParameterMap.LPDMember.stringValue : &quot;&quot;" key="lpdopt"/>
          <key-binding alias="CurrentHttpParameterMap.shopPCECmember?CurrentHttpParameterMap.shopPCECmember.booleanValue:''" key="shopPCEmember"/>
          <key-binding alias="CurrentHttpParameterMap.ZS100BrandPage? CurrentHttpParameterMap.ZS100BrandPage.booleanValue : false" key="ZS100BrandPage"/>
          <key-binding alias="CurrentHttpParameterMap.dynamicvalue?CurrentHttpParameterMap.dynamicvalue.stringValue:''" key="dynamicvalue"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Eval" pipelet-set-identifier="bc_api">
                <config-property key="OnError" value="null"/>
                <config-property key="Transactional" value="true"/>
                <config-property key="Expression" value="dw.system.Logger.info(&quot;STEP3:FAILURE&quot;)"/>
                <key-binding alias="Result" key="Result"/>
              </pipelet-node>
              <node-display x="2" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="CurrentHttpParameterMap.format.stringValue == 'ajax'" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <interaction-node transaction-required="false">
                      <template buffered="true" dynamic="false" name="util/errorjson"/>
                    </interaction-node>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Eval" pipelet-set-identifier="bc_api">
          <config-property key="OnError" value="null"/>
          <config-property key="Transactional" value="true"/>
          <config-property key="Expression" value="dw.system.Logger.info(&quot;STEP3:SUCCESS&quot;)"/>
          <key-binding alias="Result" key="Result"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.format.stringValue == 'ajax'" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="util/successjson"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="success"/>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
